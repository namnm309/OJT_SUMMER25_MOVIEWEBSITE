@model UI.Models.MovieViewModel
@{
    ViewData["Title"] = Model?.Title ?? "Chi tiết phim";
    Layout = "~/Views/Shared/_Layout.cshtml";

    // Process API data
    var movieData = Model;
    var hasValidData = movieData != null && !string.IsNullOrEmpty(movieData.Title);
    
    // Primary image for background
    var backgroundImage = hasValidData ? (movieData?.PrimaryImageUrl ?? movieData?.ImageUrl) : "";
    if (string.IsNullOrEmpty(backgroundImage) && hasValidData && movieData?.Images?.Any() == true)
    {
        backgroundImage = movieData.Images?.FirstOrDefault(img => img.IsPrimary)?.ImageUrl ?? movieData.Images?.FirstOrDefault()?.ImageUrl;
    }
    
    // Parse actors string to array
    var actorsList = new List<string>();
    if (hasValidData && !string.IsNullOrEmpty(movieData?.Actors))
    {
        actorsList = movieData.Actors!.Split(new[] { ',', ';' }, StringSplitOptions.RemoveEmptyEntries)
                                    .Select(a => a.Trim())
                                    .Where(a => !string.IsNullOrEmpty(a))
                                    .ToList();
    }

    // Mock showtime data for 7 days
    var mockShowtimes = new List<object>();
    var mockShowtimesForJs = new List<object>();
    for (int i = 0; i < 7; i++)
    {
        var date = DateTime.Now.AddDays(i);
        var times = new[] { "09:00", "12:30", "15:45", "18:30", "21:15" };
        var showtimeData = new { 
            Date = date,
            Times = times.Select(t => new { Time = t, Room = $"Phòng {(Array.IndexOf(times, t) % 3) + 1}" })
        };
        mockShowtimes.Add(showtimeData);
        
        // Prepare data for JavaScript
        mockShowtimesForJs.Add(new {
            date = date.ToString("yyyy-MM-dd"),
            times = times.Select(t => new { time = t, room = $"Phòng {(Array.IndexOf(times, t) % 3) + 1}" })
        });
    }
}

@section Styles {
    <link rel="stylesheet" href="~/css/movie-details.css" />
    <link rel="stylesheet" href="~/css/dashboard.css" />
    <style>
        /* Override conflicts và layout improvements */
        .movie-details-page {
            margin-top: 80px; /* Space for fixed header */
            padding-top: 0;
        }
        
        .details-main-container {
            margin-top: 0;
            padding-top: 2rem;
            min-height: auto;
        }
        
        /* Fix container conflicts */
        .container {
            max-width: none;
            padding: 0;
        }
        
        .pb-3.pt-3 {
            padding: 0 !important;
        }
        
        /* Ensure ad banners display properly */
        .details-sidebar-left,
        .details-sidebar-right {
            max-height: calc(100vh - 12rem);
            overflow-y: auto;
            scrollbar-width: thin;
            scrollbar-color: var(--primary-red) transparent;
        }
        
        .details-sidebar-left::-webkit-scrollbar,
        .details-sidebar-right::-webkit-scrollbar {
            width: 4px;
        }
        
        .details-sidebar-left::-webkit-scrollbar-track,
        .details-sidebar-right::-webkit-scrollbar-track {
            background: transparent;
        }
        
        .details-sidebar-left::-webkit-scrollbar-thumb,
        .details-sidebar-right::-webkit-scrollbar-thumb {
            background: var(--primary-red);
            border-radius: 2px;
        }
        
        /* Improve button interactions */
        .ad-btn:active {
            transform: translateY(-1px) scale(0.98);
        }
        
        /* Enhanced glow effect on focus */
        .ad-btn:focus {
            outline: none;
            box-shadow: 
                0 8px 25px rgba(196, 30, 58, 0.4),
                0 0 0 3px rgba(196, 30, 58, 0.3);
        }
        
        /* Improve readability */
        .ad-body p {
            text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
        }
        
        .ad-body h4 {
            text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
        }
        
        /* Fix grid alignment */
        .details-main-container {
            gap: 1.5rem;
            align-items: start;
        }
        
        /* Improve hero section fit */
        .movie-hero {
            margin-bottom: 1.5rem;
        }
        
        /* Better section spacing */
        .cast-crew-section,
        .showtime-section,
        .booking-section {
            margin-bottom: 1.5rem;
        }
        
        /* Footer spacing fix */
        .cinema-footer {
            margin-top: 3rem;
        }
        
        /* Better mobile optimization */
        @@media (max-width: 1200px) {
            .details-main-container {
                margin-top: 0;
                padding-top: 1rem;
            }
        }
        
        @@media (max-width: 576px) {
            .movie-details-page {
                margin-top: 60px;
            }
            
            .details-sidebar-left,
            .details-sidebar-right {
                max-height: none;
                overflow-y: visible;
            }
            
            .vertical-ad {
                box-shadow: 
                    0 4px 20px rgba(0, 0, 0, 0.3),
                    0 0 0 1px rgba(196, 30, 58, 0.2);
            }
            
            .details-main-container {
                padding: 0.5rem;
                gap: 1rem;
            }
        }
    </style>
}

<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">

<script>
    // Add class to body to override background
    document.addEventListener('DOMContentLoaded', function() {
        document.body.classList.add('movie-details-body');
        
        // Force override body background with inline styles
        document.body.style.backgroundColor = 'transparent';
        document.body.style.background = 'transparent';
        document.documentElement.style.background = `
            radial-gradient(circle at 20% 80%, rgba(196, 30, 58, 0.15) 0%, transparent 50%),
            radial-gradient(circle at 80% 20%, rgba(196, 30, 58, 0.1) 0%, transparent 50%),
            radial-gradient(circle at 40% 40%, rgba(139, 0, 0, 0.1) 0%, transparent 50%),
            linear-gradient(135deg, #1a1a1a 0%, #0f0f0f 25%, #1a1a1a 50%, #0a0a0a 75%, #1a1a1a 100%)
        `;
        document.documentElement.style.backgroundAttachment = 'fixed';
        document.documentElement.style.backgroundSize = '100% 100%, 100% 100%, 100% 100%, 100% 100%';
    });
</script>

<div class="movie-details-page">
    @{
        ViewBag.CurrentPage = "Movies";
    }
    
    <!-- Header - Unified Dashboard Style -->
    @Html.Partial("_DashboardHeader")

    <!-- MAIN CONTENT WITH SIDEBAR LAYOUT -->
    <div class="details-main-container">
        <!-- LEFT SIDEBAR - Advertisement -->
        <div class="details-sidebar details-sidebar-left">
            <div class="ad-banner vertical-ad">
                <div class="ad-content">
                    <div class="ad-header">
                        <i class="fas fa-tags"></i>
                        <span>Flash Sale</span>
                    </div>
                    <div class="ad-body">
                        <h4>Siêu Ưu Đãi Cuối Tuần</h4>
                        <p>Giảm tới 50% cho vé đôi tình nhân</p>
                        <button class="ad-btn" onclick="window.open('/promotions', '_blank')">Nhận Ngay</button>
                    </div>
                </div>
            </div>
            
            <div class="ad-banner vertical-ad">
                <div class="ad-content">
                    <div class="ad-header">
                        <i class="fas fa-utensils"></i>
                        <span>Combo Đặc Biệt</span>
                    </div>
                    <div class="ad-body">
                        <h4>Premium Package</h4>
                        <p>Bắp rang bơ + Nước ngọt + Kẹo</p>
                        <button class="ad-btn" onclick="window.open('/products', '_blank')">Đặt Combo</button>
                    </div>
                </div>
            </div>
            
            <div class="ad-banner vertical-ad">
                <div class="ad-content">
                    <div class="ad-header">
                        <i class="fas fa-star"></i>
                        <span>VIP Experience</span>
                    </div>
                    <div class="ad-body">
                        <h4>Ghế VIP Luxury</h4>
                        <p>Trải nghiệm điện ảnh đẳng cấp</p>
                        <button class="ad-btn" onclick="scrollToBooking()">Chọn Ghế VIP</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- CENTER CONTENT -->
        <div class="details-center-content">
            <!-- PHẦN 1: MOVIE INFO - Hero Section -->
            <div class="movie-hero">
                @if (!string.IsNullOrEmpty(backgroundImage))
                {
                    <div class="hero-background" style="background-image: url('@backgroundImage');"></div>
                }
                
                <div class="hero-container">
                    <!-- Poster Section -->
                    <div class="poster-section">
                        <div class="poster-wrapper">
                            <img src="@(backgroundImage ?? "https://via.placeholder.com/350x525/333/fff?text=No+Image")" 
                                 alt="@(movieData?.Title ?? "Movie Poster")" 
                                 class="poster-main"
                                 onerror="this.src='https://via.placeholder.com/350x525/333/fff?text=No+Image'">
                            <div class="poster-overlay">
                                <button class="poster-play-btn" onclick="openTrailer('@(movieData?.TrailerUrl ?? "")')">
                                    <i class="fas fa-play"></i>
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Movie Info Section -->
                    <div class="movie-info">
                        <div class="movie-info-content">
                            <h1 class="movie-title">@(movieData?.Title ?? "Tên phim")</h1>
                            <p class="movie-subtitle">@(movieData?.ProductionCompany ?? "Nhà sản xuất")</p>

                            <!-- Movie Meta -->
                            <div class="movie-meta">
                                @if (hasValidData && movieData?.Rating > 0)
                                {
                                    <div class="rating-badge">
                                        <i class="fas fa-star"></i>
                                        <span>@movieData.Rating.ToString("F1")</span>
                        </div>
                    }
                                
                                @if (hasValidData && movieData?.RunningTime > 0)
                                {
                                    <div class="meta-item">
                                        <i class="fas fa-clock"></i>
                                        <span>@movieData.RunningTime phút</span>
                        </div>
                    }
                                
                                @if (hasValidData && movieData != null)
                                {
                                    <div class="meta-item">
                                        <i class="fas fa-calendar"></i>
                                        <span>@movieData.ReleaseDate.Year</span>
        </div>
                                }

                                @if (hasValidData && !string.IsNullOrEmpty(movieData?.Version))
                                {
                                    <div class="meta-item">
                                        <i class="fas fa-film"></i>
                                        <span>@(movieData.Version == "TwoD" ? "2D" : movieData.Version)</span>
                                    </div>
                }
            </div>
            
                            <!-- Genre Tags -->
                            @if (hasValidData && movieData.Genres?.Any() == true)
                            {
                                <div class="genre-tags">
                                    @foreach (var genre in movieData.Genres)
                                    {
                                        <span class="genre-tag">@genre.Name</span>
                                    }
                </div>
                            }

                            <!-- Movie Description -->
                            <div class="movie-description">
                                @(movieData?.Content ?? "Thông tin chi tiết về phim sẽ được cập nhật sớm.")
            </div>
            
                            <!-- Action Buttons -->
            <div class="action-buttons">
                                @if (hasValidData && !string.IsNullOrEmpty(movieData?.TrailerUrl))
                                {
                                    <button class="btn-action btn-secondary" onclick="openTrailer('@movieData.TrailerUrl')">
                                        <i class="fas fa-play"></i>
                                        Xem Trailer
                                    </button>
                                }
                                <button class="btn-action btn-primary" onclick="scrollToBooking()">
                    <i class="fas fa-ticket-alt"></i>
                                    Đặt Vé Ngay
                </button>
            </div>
        </div>
    </div>
</div>
            </div>

            <!-- Cast & Crew Section -->
            @if (actorsList.Any() || (hasValidData && !string.IsNullOrEmpty(movieData?.Director)))
            {
                <div class="cast-crew-section">
                    <div class="section-container">
                        @if (actorsList.Any())
                        {
                            <div class="cast-section">
                                <h3 class="section-title">
                                    <i class="fas fa-users"></i>
                                    Diễn viên
                </h3>
                                <div class="cast-grid">
                                    @foreach (var actor in actorsList.Take(8))
                                    {
                                        <div class="cast-item">
                                            <div class="cast-avatar">
                                                <i class="fas fa-user"></i>
                                            </div>
                                            <div class="cast-name">@actor</div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }

                        @if (hasValidData && !string.IsNullOrEmpty(movieData?.Director))
                        {
                            <div class="director-section">
                                <h3 class="section-title">
                                    <i class="fas fa-video"></i>
                                    Đạo diễn
                                </h3>
                                <p class="director-name">@movieData.Director</p>
                            </div>
                        }
                    </div>
                </div>
            }

            <!-- PHẦN 2: SHOWTIME SECTION -->
            <div class="showtime-section">
                <div class="section-container">
                    <h2 class="section-title">
                        <i class="fas fa-calendar-alt"></i>
                        Lịch Chiếu
                    </h2>
                    
                    <div class="showtime-days">
                        @foreach (var day in mockShowtimes.Take(4))
                        {
                            var dayData = (dynamic)day;
                            <div class="day-card">
                                <div class="day-header">
                                    @if (dayData.Date.Date == DateTime.Now.Date)
                                    {
                                        <span>Hôm nay</span>
                                    }
                                    else if (dayData.Date.Date == DateTime.Now.AddDays(1).Date)
                                    {
                                        <span>Ngày mai</span>
                                    }
                                    else
                                    {
                                        <span>@dayData.Date.ToString("dd/MM")</span>
                                    }
                                    <br>
                                    <small style="font-size: 0.9rem; opacity: 0.8;">@dayData.Date.ToString("dddd")</small>
                                </div>
                                
                                <div class="time-slots">
                                    @foreach (var timeSlot in dayData.Times)
                                    {
                                        <div class="time-slot" onclick="selectTimeSlot(this, '@dayData.Date.ToString("yyyy-MM-dd")', '@timeSlot.Time')">
                                            <div class="time-text">@timeSlot.Time</div>
                                            <div class="room-text">@timeSlot.Room</div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- PHẦN 3: QUICK BOOKING SECTION -->
            <div class="booking-section">
                <div class="section-container">
                    <h2 class="section-title">
                        <i class="fas fa-ticket-alt"></i>
                        Đặt Vé Nhanh
                    </h2>

                    <div class="booking-content">
                        <form class="booking-form" id="quickBookingForm">
                            <!-- 1. Chọn rạp (Fixed) -->
                            <div class="form-group">
                                <label class="form-label">
                                    <i class="fas fa-map-marker-alt"></i>
                                    1. Chọn rạp
                                </label>
                                <select class="form-select" disabled>
                                    <option>FPT Software Cinema</option>
                                </select>
                            </div>

                            <!-- 2. Chọn phim (Auto-selected) -->
                            <div class="form-group">
                                <label class="form-label">
                                    <i class="fas fa-film"></i>
                                    2. Chọn phim
                                </label>
                                <select class="form-select" disabled>
                                    <option>@(movieData?.Title ?? "Phim hiện tại")</option>
                                </select>
                            </div>

                            <!-- 3. Chọn ngày -->
                            <div class="form-group">
                                <label class="form-label">
                                    <i class="fas fa-calendar"></i>
                                    3. Chọn ngày
                                </label>
                                <select class="form-select" id="dateSelect" onchange="updateTimeSlots()">
                                    <option value="">-- Chọn ngày chiếu --</option>
                                    @foreach (var day in mockShowtimes)
                                    {
                                        var dayData = (dynamic)day;
                                        <option value="@dayData.Date.ToString("yyyy-MM-dd")">
                                            @if (dayData.Date.Date == DateTime.Now.Date)
                                            {
                                                <text>Hôm nay (@dayData.Date.ToString("dd/MM"))</text>
                                            }
                                            else if (dayData.Date.Date == DateTime.Now.AddDays(1).Date)
                                            {
                                                <text>Ngày mai (@dayData.Date.ToString("dd/MM"))</text>
                    }
                    else
                    {
                                                <text>@dayData.Date.ToString("dddd, dd/MM/yyyy")</text>
                                            }
                                        </option>
                                    }
                                </select>
                            </div>

                            <!-- 4. Chọn suất -->
                            <div class="form-group">
                                <label class="form-label">
                                    <i class="fas fa-clock"></i>
                                    4. Chọn suất
                                </label>
                                <select class="form-select" id="timeSelect" disabled>
                                    <option>-- Chọn ngày trước --</option>
                                </select>
                            </div>

                            <!-- Nút Đặt ngay -->
                            <button type="button" class="btn-book" id="bookButton" onclick="quickBook()" disabled>
                                <i class="fas fa-ticket-alt"></i>
                                Đặt Ngay
                            </button>
                        </form>
                        </div>
                </div>
            </div>
        </div>
        
        <!-- RIGHT SIDEBAR - More Ads/Content -->
        <div class="details-sidebar details-sidebar-right">
            <div class="ad-banner vertical-ad">
                <div class="ad-content">
                    <div class="ad-header">
                        <i class="fas fa-crown"></i>
                        <span>Membership Elite</span>
                    </div>
                    <div class="ad-body">
                        <h4>CinemaCard Gold</h4>
                        <p>Ưu đãi độc quyền & tích điểm x2</p>
                        <button class="ad-btn" onclick="window.open('/account/register', '_blank')">Đăng Ký VIP</button>
                    </div>
                </div>
            </div>
            
            <div class="ad-banner vertical-ad">
                <div class="ad-content">
                    <div class="ad-header">
                        <i class="fas fa-fire"></i>
                        <span>Event Hot</span>
                    </div>
                    <div class="ad-body">
                        <h4>Lễ Hội Điện Ảnh</h4>
                        <p>Những bộ phim bom tấn mới nhất</p>
                        <button class="ad-btn" onclick="window.open('/events', '_blank')">Khám Phá</button>
                    </div>
                </div>
            </div>
            
            <div class="ad-banner vertical-ad">
                <div class="ad-content">
                    <div class="ad-header">
                        <i class="fas fa-mobile-alt"></i>
                        <span>Cinema App</span>
                    </div>
                    <div class="ad-body">
                        <h4>Download App</h4>
                        <p>Đặt vé nhanh chóng, tiện lợi</p>
                        <button class="ad-btn" onclick="alert('App sẽ ra mắt sớm!')">Tải Ngay</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Trailer Modal -->
<div class="trailer-modal" id="trailerModal">
    <div class="trailer-content">
        <button class="close-trailer" onclick="closeTrailer()">
            <i class="fas fa-times"></i>
        </button>
        <iframe class="trailer-iframe" id="trailerIframe" src="" frameborder="0" allowfullscreen></iframe>
    </div>
</div>

@section Scripts {
    <script>
        // Mock showtime data for JavaScript
        const mockShowtimeData = @Html.Raw(Json.Serialize(mockShowtimesForJs));

        // Global variables
        let selectedDate = '';
        let selectedTime = '';
        let selectedRoom = '';

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            // Enable date selection
            document.getElementById('dateSelect').disabled = false;
        });

        // Select time slot from showtime section
        function selectTimeSlot(element, date, time) {
            // Remove previous selections
            document.querySelectorAll('.time-slot').forEach(slot => {
                slot.classList.remove('selected');
            });
            
            // Select current slot
            element.classList.add('selected');
            
            // Update form
            const dateSelect = document.getElementById('dateSelect');
            const timeSelect = document.getElementById('timeSelect');
            
            dateSelect.value = date;
            selectedDate = date;
            updateTimeSlots();
            
            // Auto select time
            setTimeout(() => {
                timeSelect.value = time;
                selectedTime = time;
                updateBookButton();
            }, 100);
        }

        // Update time slots based on selected date
        function updateTimeSlots() {
            const dateSelect = document.getElementById('dateSelect');
            const timeSelect = document.getElementById('timeSelect');
            const selectedDate = dateSelect.value;

            if (!selectedDate) {
                timeSelect.innerHTML = '<option>-- Chọn ngày trước --</option>';
                timeSelect.disabled = true;
                updateBookButton();
                return;
            }

            // Find times for selected date
            const dayData = mockShowtimeData.find(day => day.date === selectedDate);
            
            if (dayData) {
                timeSelect.innerHTML = '<option value="">-- Chọn suất chiếu --</option>';
                dayData.times.forEach(timeSlot => {
                    const option = document.createElement('option');
                    option.value = timeSlot.time;
                    option.textContent = `${timeSlot.time} - ${timeSlot.room}`;
                    timeSelect.appendChild(option);
                });
                timeSelect.disabled = false;
            }

            updateBookButton();
        }

        // Update book button state
        function updateBookButton() {
            const dateSelect = document.getElementById('dateSelect');
            const timeSelect = document.getElementById('timeSelect');
            const bookButton = document.getElementById('bookButton');

            const hasDate = dateSelect.value !== '';
            const hasTime = timeSelect.value !== '';

            bookButton.disabled = !hasDate || !hasTime;
        }

        // Handle time selection change
        document.getElementById('timeSelect').addEventListener('change', function() {
            selectedTime = this.value;
            updateBookButton();
        });

        // Quick booking function
        function quickBook() {
            const dateSelect = document.getElementById('dateSelect');
            const timeSelect = document.getElementById('timeSelect');

            if (!dateSelect.value || !timeSelect.value) {
                alert('Vui lòng chọn ngày và suất chiếu!');
                return;
            }

            // Check if user is logged in
            const isLoggedIn = @Json.Serialize(User.Identity?.IsAuthenticated == true);
            
            if (!isLoggedIn) {
                if (confirm('Bạn cần đăng nhập để đặt vé. Chuyển đến trang đăng nhập?')) {
                    window.location.href = '@Url.Action("Login", "Account")?returnUrl=' + encodeURIComponent(window.location.href);
                }
                return;
            }

            // Get selected data
            const selectedData = {
                movieId: '@(movieData?.Id ?? "")',
                movieTitle: '@(movieData?.Title ?? "")',
                cinema: 'FPT Software Cinema',
                date: dateSelect.value,
                time: timeSelect.value,
                timeText: timeSelect.options[timeSelect.selectedIndex].text
            };

            // Show confirmation
            const message = `Đặt vé cho:\n• Phim: ${selectedData.movieTitle}\n• Rạp: ${selectedData.cinema}\n• Ngày: ${selectedData.date}\n• Suất: ${selectedData.timeText}\n\nTiếp tục đến trang chọn ghế?`;
            
            if (confirm(message)) {
                // Redirect to seat selection page (you'll need to implement this route)
                window.location.href = `/booking/seat-selection?movieId=${selectedData.movieId}&date=${selectedData.date}&time=${selectedData.time}`;
            }
        }

        // Scroll to booking section
        function scrollToBooking() {
            document.querySelector('.booking-section').scrollIntoView({ 
                behavior: 'smooth',
                block: 'center'
            });
        }

        // Trailer functions
        function openTrailer(trailerUrl) {
            const modal = document.getElementById('trailerModal');
            const iframe = document.getElementById('trailerIframe');
            
            // Convert different URL formats to embeddable format
            let embedUrl = trailerUrl;
            
            // Handle YouTube URLs
            if (trailerUrl.includes('youtube.com/watch')) {
                const videoId = trailerUrl.split('v=')[1]?.split('&')[0];
                embedUrl = `https://www.youtube.com/embed/${videoId}?autoplay=1`;
            } else if (trailerUrl.includes('youtu.be/')) {
                const videoId = trailerUrl.split('youtu.be/')[1]?.split('?')[0];
                embedUrl = `https://www.youtube.com/embed/${videoId}?autoplay=1`;
            }
            // Cloudinary URLs should work as-is
            
            iframe.src = embedUrl;
            modal.classList.add('show');
            
            // Prevent body scroll
            document.body.style.overflow = 'hidden';
        }

        function closeTrailer() {
            const modal = document.getElementById('trailerModal');
            const iframe = document.getElementById('trailerIframe');
            
            iframe.src = '';
            modal.classList.remove('show');
            
            // Restore body scroll
            document.body.style.overflow = 'auto';
        }

        // Close modal when clicking outside
        document.getElementById('trailerModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeTrailer();
            }
        });

        // Close modal with Escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeTrailer();
            }
        });

        // Search functionality
        document.getElementById('searchButton').addEventListener('click', function() {
            const searchInput = document.getElementById('movieSearchInput');
            const query = searchInput.value.trim();
            
            if (query) {
                window.location.href = `@Url.Action("SearchResults", "Movies")?query=${encodeURIComponent(query)}`;
            }
        });

        document.getElementById('movieSearchInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                document.getElementById('searchButton').click();
            }
        });
    </script>
}