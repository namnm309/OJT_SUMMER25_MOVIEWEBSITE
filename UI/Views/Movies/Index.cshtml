@model List<MovieViewModel>
@{
    ViewData["Title"] = "Danh SÃ¡ch Phim - Cinema City";
    Layout = null;
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <!-- FontAwesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <!-- Homepage Base CSS for Footer -->
    <link rel="stylesheet" href="~/css/HomePage/base.css" />
    <!-- Dashboard CSS -->
    <link rel="stylesheet" href="~/css/dashboard.css" />
    
    <style>
        /* Cinema Red-Black Theme - Same as Details page */
        html, body {
            background: linear-gradient(135deg, #1a1a1a 0%, #0f0f0f 25%, #1a1a1a 50%, #0a0a0a 75%, #1a1a1a 100%);
            background-attachment: fixed;
            background-size: 100% 100%;
            margin: 0 !important;
            padding: 0 !important;
            height: 100%;
            color: white;
            font-family: 'Inter', sans-serif;
        }
        
        .cinema-movies-page {
            min-height: 100vh;
            color: white;
            font-family: 'Inter', sans-serif;
            background: transparent;
        }

        .movies-hero-section {
            background: linear-gradient(135deg, rgba(223, 33, 68, 0.1) 0%, rgba(223, 33, 68, 0.05) 100%),
                        url('https://images.unsplash.com/photo-1489599511188-17dd6989e6db?w=1920&h=1080&fit=crop&q=80');
            background-size: cover;
            background-position: center;
            padding: 6rem 0 4rem;
            position: relative;
            border-bottom: 1px solid rgba(223, 33, 68, 0.2);
        }

        .movies-hero-content {
            text-align: center;
            max-width: 800px;
            margin: 0 auto;
            padding: 0 2rem;
        }

        .movies-hero-title {
            font-size: 3.5rem;
            font-weight: 800;
            margin-bottom: 1rem;
            background: linear-gradient(135deg, #df2144 0%, #ff4466 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .movies-hero-subtitle {
            font-size: 1.3rem;
            color: rgba(255,255,255,0.8);
            margin-bottom: 2rem;
            font-weight: 400;
        }

        .movies-stats {
            display: flex;
            justify-content: center;
            gap: 3rem;
            margin-top: 2rem;
        }

        .stat-item {
            text-align: center;
        }

        .stat-number {
            display: block;
            font-size: 2.5rem;
            font-weight: 700;
            color: #df2144;
            margin-bottom: 0.5rem;
        }

        .stat-label {
            font-size: 1rem;
            color: rgba(255,255,255,0.7);
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        /* Filter Section */
        .filter-section {
            background: rgba(42, 42, 42, 0.9);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(223, 33, 68, 0.2);
            border-radius: 20px;
            padding: 2rem;
            margin: -3rem 2rem 3rem;
            box-shadow: 0 8px 32px rgba(0,0,0,0.3);
        }

        .filter-header {
            text-align: center;
            margin-bottom: 2rem;
        }

        .filter-title {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .filter-subtitle {
            color: rgba(255,255,255,0.7);
            font-size: 1rem;
        }

        .filter-tabs {
            display: flex;
            justify-content: center;
            gap: 1rem;
            flex-wrap: wrap;
            margin-bottom: 2rem;
        }

        .filter-tab {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 1rem 2rem;
            border: 2px solid rgba(255,255,255,0.2);
            background: rgba(255,255,255,0.05);
            color: rgba(255,255,255,0.8);
            border-radius: 50px;
            font-weight: 500;
            transition: all 0.3s ease;
            cursor: pointer;
            backdrop-filter: blur(10px);
        }

        .filter-tab:hover {
            border-color: rgba(255,255,255,0.4);
            background: rgba(255,255,255,0.1);
            transform: translateY(-2px);
        }

        .filter-tab.active {
            background: linear-gradient(135deg, #df2144 0%, #ff4466 100%);
            border-color: #df2144;
            color: white;
            box-shadow: 0 8px 25px rgba(223, 33, 68, 0.4);
        }

        .search-container {
            max-width: 500px;
            margin: 0 auto;
        }

        .search-box-movies {
            position: relative;
            background: rgba(255,255,255,0.1);
            border-radius: 50px;
            border: 1px solid rgba(255,255,255,0.2);
            overflow: hidden;
            backdrop-filter: blur(10px);
        }

        .search-box-movies input {
            width: 100%;
            padding: 1rem 1.5rem 1rem 3rem;
            border: none;
            background: transparent;
            color: white;
            font-size: 1rem;
        }

        .search-box-movies input::placeholder {
            color: rgba(255,255,255,0.6);
        }

        .search-box-movies .search-icon {
            position: absolute;
            left: 1.5rem;
            top: 50%;
            transform: translateY(-50%);
            color: rgba(255,255,255,0.6);
            cursor: pointer;
        }

        /* Movies Grid */
        .movies-content {
            padding: 0 2rem 4rem;
        }

        .movies-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 2rem;
            max-width: 1400px;
            margin: 0 auto;
        }

        .movie-card-cinema {
            background: rgba(42, 42, 42, 0.9);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 20px;
            overflow: hidden;
            transition: all 0.3s ease;
            backdrop-filter: blur(20px);
            position: relative;
        }

        .movie-card-cinema:hover {
            transform: translateY(-10px);
            box-shadow: 0 20px 40px rgba(223, 33, 68, 0.3);
            border-color: rgba(223, 33, 68, 0.5);
        }

        .movie-poster-container {
            position: relative;
            overflow: hidden;
            aspect-ratio: 2/3;
        }

        .movie-poster-container img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .movie-card-cinema:hover .movie-poster-container img {
            transform: scale(1.05);
        }

        /* Movie Badges */
        .movie-badge {
            position: absolute;
            top: 15px;
            right: 15px;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            z-index: 2;
            backdrop-filter: blur(10px);
        }

        .movie-badge.recommended {
            background: linear-gradient(135deg, #ff6b35 0%, #f7931e 100%);
            color: white;
        }

        .movie-badge.coming-soon {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .movie-badge.now-showing {
            background: linear-gradient(135deg, #56ab2f 0%, #a8e6cf 100%);
            color: white;
        }

        /* Overlay */
        .movie-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.85);
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.3s ease;
            z-index: 3;
        }

        .movie-card-cinema:hover .movie-overlay {
            opacity: 1;
        }

        .movie-actions {
            display: flex;
            gap: 1rem;
            flex-direction: column;
        }

        .movie-actions .btn {
            padding: 0.75rem 1.5rem;
            border-radius: 50px;
            font-weight: 600;
            border: none;
            transition: all 0.3s ease;
            text-decoration: none;
            text-align: center;
        }

        .movie-actions .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .movie-actions .btn-success {
            background: linear-gradient(135deg, #56ab2f 0%, #a8e6cf 100%);
            color: white;
        }

        /* Rating */
        .movie-rating {
            position: absolute;
            bottom: 15px;
            left: 15px;
            background: rgba(0, 0, 0, 0.8);
            color: #ffa500;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.9rem;
            font-weight: 600;
            z-index: 2;
            backdrop-filter: blur(10px);
        }

        /* Movie Info */
        .movie-info {
            padding: 1.5rem;
        }

        .movie-title {
            font-size: 1.25rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            color: #fff;
            line-height: 1.3;
        }

        .movie-genre {
            color: rgba(255,255,255,0.7);
            font-size: 0.9rem;
            margin-bottom: 0.75rem;
        }

        .movie-meta {
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 0.85rem;
            color: rgba(255,255,255,0.6);
            margin-bottom: 0.5rem;
        }

        .movie-director {
            color: rgba(255,255,255,0.6);
            font-size: 0.85rem;
            margin-bottom: 0;
        }

        /* Empty State */
        .empty-state {
            grid-column: 1 / -1;
            text-align: center;
            padding: 4rem 2rem;
        }

        .empty-content {
            max-width: 400px;
            margin: 0 auto;
        }

        .empty-content i {
            color: rgba(255,255,255,0.3);
            margin-bottom: 1rem;
        }

        .empty-content h3 {
            color: rgba(255,255,255,0.8);
            margin-bottom: 1rem;
        }

        .empty-content p {
            color: rgba(255,255,255,0.6);
            margin-bottom: 2rem;
        }

        /* Responsive Design */
        @@media (max-width: 768px) {
            .movies-hero-title {
                font-size: 2.5rem;
            }

            .movies-stats {
                gap: 2rem;
            }

            .filter-section {
                margin: -2rem 1rem 2rem;
                padding: 1.5rem;
            }

            .filter-tabs {
                justify-content: center;
            }

            .filter-tab {
                padding: 0.75rem 1.5rem;
                font-size: 0.9rem;
            }

            .movies-grid {
                grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
                gap: 1.5rem;
            }

            .movies-content {
                padding: 0 1rem 3rem;
            }
        }

        @@media (max-width: 576px) {
            .movies-hero-section {
                padding: 5rem 0 3rem;
            }

            .movies-hero-title {
                font-size: 2rem;
            }

            .movies-stats {
                flex-direction: column;
                gap: 1rem;
            }

            .filter-section {
                margin: -1.5rem 1rem 2rem;
                padding: 1rem;
            }

            .movies-grid {
                grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
                gap: 1rem;
            }
        }

        /* Background Animation */
        .movies-hero-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: 
                radial-gradient(circle at 20% 50%, rgba(223, 33, 68, 0.15) 0%, transparent 50%),
                radial-gradient(circle at 80% 20%, rgba(223, 33, 68, 0.1) 0%, transparent 50%),
                radial-gradient(circle at 40% 80%, rgba(139, 0, 0, 0.1) 0%, transparent 50%);
            animation: backgroundShift 20s ease-in-out infinite;
        }

        @@keyframes backgroundShift {
            0%, 100% { transform: translateX(0) translateY(0); }
            33% { transform: translateX(-20px) translateY(-10px); }
            66% { transform: translateX(20px) translateY(10px); }
        }

        /* Page Layout Fix */
        .cinema-movies-page {
            min-height: 100vh;
            position: relative;
            overflow-x: hidden;
        }

        /* Footer styling override */
        .cinema-footer {
            margin-top: 4rem !important;
            position: relative !important;
            clear: both;
            width: 100% !important;
        }
    </style>
</head>
<body>
    @{
        ViewBag.CurrentPage = "Movies";
    }
    
    <!-- Header - Unified Dashboard Style -->
    @Html.Partial("_DashboardHeader")

<div class="cinema-movies-page">

    <div class="movies-hero-section">
        <div class="container">
            <div class="movies-hero-content">
                <h1 class="movies-hero-title">
                    <i class="fas fa-film me-3"></i>Danh SÃ¡ch Phim
                </h1>
                <p class="movies-hero-subtitle">KhÃ¡m phÃ¡ kho tÃ ng Äiá»n áº£nh phong phÃº táº¡i Cinema City</p>
                
                <div class="movies-stats">
                    <div class="stat-item">
                        <span class="stat-number" id="totalMovies">0</span>
                        <span class="stat-label">Tá»ng sá» phim</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-number" id="nowShowingCount">0</span>
                        <span class="stat-label">Äang chiáº¿u</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-number" id="comingSoonCount">0</span>
                        <span class="stat-label">Sáº¯p chiáº¿u</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="filter-section">
            <div class="filter-header">
                <h2 class="filter-title">Lá»c Phim</h2>
                <p class="filter-subtitle">TÃ¬m kiáº¿m phim theo thá» loáº¡i vÃ  tráº¡ng thÃ¡i</p>
            </div>
            
            <div class="filter-tabs">
                <button class="filter-tab active" data-filter="all">
                    <i class="fas fa-th-large"></i>
                    Táº¥t cáº£ phim
                </button>
                <button class="filter-tab" data-filter="recommended">
                    <i class="fas fa-thumbs-up"></i>
                    Phim Äá» xuáº¥t
                </button>
                <button class="filter-tab" data-filter="coming-soon">
                    <i class="fas fa-calendar-alt"></i>
                    Phim sáº¯p chiáº¿u
                </button>
                <button class="filter-tab" data-filter="now-showing">
                    <i class="fas fa-play-circle"></i>
                    Äang chiáº¿u
                </button>
            </div>

            <div class="search-container">
                <div class="search-box-movies">
                    <i class="fas fa-search search-icon" id="searchBtn"></i>
                    <input type="text" placeholder="TÃ¬m kiáº¿m phim theo tÃªn, thá» loáº¡i, Äáº¡o diá»n..." id="movieSearch">
                </div>
            </div>
        </div>

        <div class="movies-content">
            <div class="movies-grid" id="moviesGrid">
                <!-- Movies will be loaded here via JavaScript -->
                <div class="loading-state" style="grid-column: 1 / -1; text-align: center; padding: 4rem 2rem;">
                    <i class="fas fa-spinner fa-spin fa-3x" style="color: rgba(255,255,255,0.6);"></i>
                    <h3 style="color: rgba(255,255,255,0.8); margin-top: 1rem;">Äang táº£i phim...</h3>
                </div>
            </div>
        </div>
    </div>
</div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const filterTabs = document.querySelectorAll('.filter-tab');
            const searchInput = document.getElementById('movieSearch');
            const searchBtn = document.getElementById('searchBtn');
            const moviesGrid = document.getElementById('moviesGrid');
            
            let currentFilter = 'all';
            let currentPage = 1;
            let totalPages = 1;
            let isLoading = false;

            // Load initial data
            loadMovies('all', 1);

            // Filter functionality
            filterTabs.forEach(tab => {
                tab.addEventListener('click', function() {
                    if (isLoading) return;
                    
                    // Remove active class from all tabs
                    filterTabs.forEach(t => t.classList.remove('active'));
                    // Add active class to clicked tab
                    this.classList.add('active');

                    const filter = this.getAttribute('data-filter');
                    currentFilter = filter;
                    currentPage = 1; // Reset to first page
                    
                    console.log('ð¬ [FILTER] Switching to:', filter);
                    loadMovies(filter, 1);
                });
            });

            async function loadMovies(filter, page = 1) {
                if (isLoading) return;
                
                try {
                    isLoading = true;
                    showLoading();
                    
                    console.log(`ð [API CALL] Loading movies: filter=${filter}, page=${page}`);
                    
                    const response = await fetch(`@Url.Action("GetMoviesByFilter", "Movies")?filter=${filter}&page=${page}&pageSize=12`);
                    const result = await response.json();
                    
                    console.log('ð¥ [API RESPONSE]', result);
                    
                    if (result.success) {
                        displayMovies(result.data, filter);
                        updateStats(result, filter);
                        
                        // Handle pagination for "all" filter
                        if (filter === 'all' && result.pagination) {
                            totalPages = result.pagination.totalPages;
                            currentPage = result.pagination.currentPage;
                            displayPagination(result.pagination);
                        } else {
                            // Hide pagination for other filters
                            hidePagination();
                        }
                        
                        console.log(`â [SUCCESS] Loaded ${result.data?.length || 0} movies for filter: ${filter}`);
                    } else {
                        console.error('â [ERROR] API call failed:', result.message);
                        showError(result.message || 'KhÃ´ng thá» táº£i danh sÃ¡ch phim');
                    }
                } catch (error) {
                    console.error('â [FETCH ERROR]', error);
                    showError('ÄÃ£ xáº£y ra lá»i khi táº£i danh sÃ¡ch phim');
                } finally {
                    isLoading = false;
                    hideLoading();
                }
            }

            function displayMovies(movies, filter) {
                if (!movies || movies.length === 0) {
                    moviesGrid.innerHTML = `
                        <div class="empty-state">
                            <div class="empty-content">
                                <i class="fas fa-film fa-5x"></i>
                                <h3>KhÃ´ng cÃ³ phim nÃ o</h3>
                                <p>Hiá»n táº¡i khÃ´ng tÃ¬m tháº¥y phim nÃ o cho danh má»¥c "${getFilterDisplayName(filter)}".</p>
                                <button class="btn btn-primary" onclick="loadMovies('all', 1)">
                                    <i class="fas fa-refresh"></i>
                                    Xem táº¥t cáº£ phim
                                </button>
                            </div>
                        </div>
                    `;
                    return;
                }

                const moviesHtml = movies.map(movie => createMovieCard(movie)).join('');
                moviesGrid.innerHTML = moviesHtml;
                
                // Animate cards
                setTimeout(() => {
                    const cards = moviesGrid.querySelectorAll('.movie-card-cinema');
                    cards.forEach((card, index) => {
                        card.style.opacity = '0';
                        card.style.transform = 'translateY(20px)';
                        setTimeout(() => {
                            card.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
                            card.style.opacity = '1';
                            card.style.transform = 'translateY(0)';
                        }, index * 100);
                    });
                }, 50);
            }

            function createMovieCard(movie) {
                const imageUrl = movie.primaryImageUrl || movie.imageUrl || 
                    (movie.images && movie.images.length > 0 ? 
                        (movie.images.find(img => img.isPrimary) || movie.images[0]).imageUrl : 
                        'https://via.placeholder.com/300x450/1a1a1a/ffffff?text=No+Image');

                            const genresText = movie.genres && movie.genres.length > 0 ?
                movie.genres.map(g => g.name).join(', ') : 'ChÆ°a phÃ¢n loáº¡i';

                const isRecommended = movie.isRecommended;
                const isComingSoon = movie.status === 1;
                const isNowShowing = movie.status === 2;

                return `
                    <div class="movie-card-cinema">
                        <div class="movie-poster-container">
                            <img src="${imageUrl}" alt="${movie.title}" loading="lazy"
                                 onerror="this.src='https://via.placeholder.com/300x450/1a1a1a/ffffff?text=No+Image'">
                            
                            ${isRecommended ? `
                                <div class="movie-badge recommended">
                                    <i class="fas fa-thumbs-up"></i>
                                    Äá» xuáº¥t
                                </div>
                            ` : ''}
                            
                            ${isComingSoon ? `
                                <div class="movie-badge coming-soon">
                                    <i class="fas fa-calendar-alt"></i>
                                    Sáº¯p chiáº¿u
                                </div>
                            ` : ''}
                            
                            ${isNowShowing ? `
                                <div class="movie-badge now-showing">
                                    <i class="fas fa-play-circle"></i>
                                    Äang chiáº¿u
                                </div>
                            ` : ''}

                            <div class="movie-overlay">
                                <div class="movie-actions">
                                    <a href="@Url.Action("Details", "Movies")/${movie.id}" class="btn btn-primary">
                                        <i class="fas fa-info-circle"></i>
                                        Chi tiáº¿t
                                    </a>
                                    ${isNowShowing ? `
                                        <a href="@Url.Action("Showtimes", "Movies")/${movie.id}" class="btn btn-success">
                                            <i class="fas fa-clock"></i>
                                            Äáº·t vÃ©
                                        </a>
                                    ` : ''}
                                </div>
                            </div>

                            ${movie.rating > 0 ? `
                                <div class="movie-rating">
                                    <i class="fas fa-star"></i>
                                    ${movie.rating.toFixed(1)}
                                </div>
                            ` : ''}
                        </div>

                        <div class="movie-info">
                            <h3 class="movie-title">${movie.title}</h3>
                            <p class="movie-genre">${genresText}</p>
                            <div class="movie-meta">
                                <span class="movie-duration">
                                    <i class="fas fa-clock"></i>
                                    ${movie.runningTime} phÃºt
                                </span>
                                <span class="movie-year">
                                    <i class="fas fa-calendar"></i>
                                    ${new Date(movie.releaseDate).getFullYear()}
                                </span>
                            </div>
                            ${movie.director ? `
                                <p class="movie-director">
                                    <i class="fas fa-user-tie"></i>
                                    ${movie.director}
                                </p>
                            ` : ''}
                        </div>
                    </div>
                `;
            }

            function updateStats(result, filter) {
                if (filter === 'all' && result.pagination) {
                    document.getElementById('totalMovies').textContent = result.pagination.totalItems;
                    // Äá» nguyÃªn stats cho now-showing vÃ  coming-soon khi á» tab "all"
                } else {
                    // Cáº­p nháº­t sá» liá»u cho tab hiá»n táº¡i
                    const count = result.totalCount || result.data?.length || 0;
                    document.getElementById('totalMovies').textContent = count;
                    
                    if (filter === 'recommended') {
                        // CÃ³ thá» cáº­p nháº­t thÃªm stats riÃªng cho recommended
                    }
                }
            }

            function displayPagination(pagination) {
                let paginationHtml = '';
                
                if (pagination.totalPages > 1) {
                    paginationHtml = `
                        <nav aria-label="PhÃ¢n trang phim" class="mt-4">
                            <ul class="pagination justify-content-center">
                                <li class="page-item ${pagination.currentPage <= 1 ? 'disabled' : ''}">
                                    <button class="page-link" ${pagination.currentPage > 1 ? `onclick="loadMovies('all', ${pagination.currentPage - 1})"` : ''}>
                                        <i class="fas fa-chevron-left"></i> TrÆ°á»c
                                    </button>
                                </li>
                `;
                    
                    // Hiá»n thá» cÃ¡c trang
                    for (let i = Math.max(1, pagination.currentPage - 2); 
                         i <= Math.min(pagination.totalPages, pagination.currentPage + 2); 
                         i++) {
                        paginationHtml += `
                            <li class="page-item ${i === pagination.currentPage ? 'active' : ''}">
                                <button class="page-link" onclick="loadMovies('all', ${i})">${i}</button>
                            </li>
                        `;
                    }
                    
                    paginationHtml += `
                                <li class="page-item ${pagination.currentPage >= pagination.totalPages ? 'disabled' : ''}">
                                    <button class="page-link" ${pagination.currentPage < pagination.totalPages ? `onclick="loadMovies('all', ${pagination.currentPage + 1})"` : ''}>
                                        Sau <i class="fas fa-chevron-right"></i>
                                    </button>
                                </li>
                            </ul>
                        </nav>
                    `;
                }
                
                // Add pagination after movies grid
                const existingPagination = document.querySelector('.pagination-container');
                if (existingPagination) {
                    existingPagination.remove();
                }
                
                if (paginationHtml) {
                    const paginationDiv = document.createElement('div');
                    paginationDiv.className = 'pagination-container';
                    paginationDiv.innerHTML = paginationHtml;
                    moviesGrid.parentNode.appendChild(paginationDiv);
                }
            }

            function hidePagination() {
                const existingPagination = document.querySelector('.pagination-container');
                if (existingPagination) {
                    existingPagination.remove();
                }
            }

            function showLoading() {
                moviesGrid.innerHTML = `
                    <div class="loading-state" style="grid-column: 1 / -1; text-align: center; padding: 4rem 2rem;">
                        <i class="fas fa-spinner fa-spin fa-3x" style="color: rgba(255,255,255,0.6);"></i>
                        <h3 style="color: rgba(255,255,255,0.8); margin-top: 1rem;">Äang táº£i phim...</h3>
                    </div>
                `;
            }

            function hideLoading() {
                const loadingState = document.querySelector('.loading-state');
                if (loadingState) {
                    loadingState.remove();
                }
            }

            function showError(message) {
                moviesGrid.innerHTML = `
                    <div class="error-state" style="grid-column: 1 / -1; text-align: center; padding: 4rem 2rem;">
                        <i class="fas fa-exclamation-triangle fa-3x" style="color: #ff6b6b;"></i>
                        <h3 style="color: rgba(255,255,255,0.8); margin: 1rem 0;">ÄÃ£ xáº£y ra lá»i</h3>
                        <p style="color: rgba(255,255,255,0.6); margin-bottom: 2rem;">${message}</p>
                        <button class="btn btn-primary" onclick="loadMovies(currentFilter, currentPage)">
                            <i class="fas fa-refresh"></i>
                            Thá»­ láº¡i
                        </button>
                    </div>
                `;
            }

            function getFilterDisplayName(filter) {
                const names = {
                    'all': 'Táº¥t cáº£ phim',
                    'recommended': 'Phim Äá» xuáº¥t', 
                    'coming-soon': 'Phim sáº¯p chiáº¿u',
                    'now-showing': 'Phim Äang chiáº¿u'
                };
                return names[filter] || filter;
            }

            // Search functionality
            function performSearch() {
                const keyword = searchInput.value.trim();
                
                if (keyword) {
                    window.location.href = `@Url.Action("Search", "Movies")?keyword=${encodeURIComponent(keyword)}`;
                } else {
                    loadMovies(currentFilter, 1);
                }
            }

            searchBtn.addEventListener('click', performSearch);
            
            searchInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    performSearch();
                }
            });

            console.log('ð¬ Cinema Movies page initialized with AJAX loading');
        });
    </script>

    <!-- Footer -->
    @Html.Partial("footer")

    <!-- Scripts -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>