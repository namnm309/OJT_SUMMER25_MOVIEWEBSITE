@using System.Security.Claims
@using System.Text.Json
@model UI.Models.HomeViewModel
@{
	ViewData["Title"] = "Cinema City";
}

@section Styles {
	<link rel="stylesheet" href="~/css/HomePage/base.css" />
	<link rel="stylesheet" href="~/css/HomePage/header.css" />
	<link rel="stylesheet" href="~/css/Shared/_header.css" />
	<link rel="stylesheet" href="~/css/HomePage/hero.css" />
	
	<link rel="stylesheet" href="~/css/HomePage/moviecard.css" />
	<link rel="stylesheet" href="~/css/HomePage/layout.css" />
	<link rel="stylesheet" href="~/css/HomePage/button.css" />
	<link rel="stylesheet" href="~/css/HomePage/movie-poster-overlay.css" />
	<link rel="stylesheet" href="~/css/HomePage/banner.css" />
	<link rel="stylesheet" href="~/css/HomePage/responsive.css" />
	<link rel="stylesheet" href="~/css/HomePage/custom-fix.css" />
	<link rel="stylesheet" href="~/css/HomePage/custom-sections.css" />
	<link rel="stylesheet" href="~/css/MovieDetails/movie-details-mostly.css" asp-append-version="true" />

}

<link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600;700&display=swap" rel="stylesheet">

<div class="home-new-style">
	
	<div class="hero-section" id="heroSection">
		
		<div class="hero-background" id="heroBackground">
			@{
				var initialImage = Model?.FeaturedMovie != null
				? GetMovieImageUrl(Model.FeaturedMovie)
				: "https://via.placeholder.com/1920x1080/1a1a1a/ffffff?text=Cinema+City";
			}
			
			<div class="hero-image" id="heroImage" style="background-image: url('@initialImage'); display: none; opacity: 0;"></div>

			
		</div>
		<!-- Header từ trang Details -->
		@Html.Partial("_Header")

		
		<div class="movie-content" id="movieContent">
			@if (Model?.FeaturedMovie != null)
			{
				<div class="movie-info">
					<div class="movie-header">
						<h1 class="movie-title" id="movieTitle">@Model.FeaturedMovie.Title</h1>
						<p class="movie-title-vn" id="movieTitleVn">@(Model.FeaturedMovie.Director ?? "Đạo diễn")</p>
					</div>

					<div class="movie-details">
						<div class="plot-section">
							<h3>Tóm tắt nội dung</h3>
							<p id="moviePlot">
								@(Model.FeaturedMovie.Content ?? "Chưa có thông tin nội dung.")
							</p>
						</div>

						<div class="genre-section">
							<h3>Thể loại</h3>
							<p id="movieGenre">@(Model.FeaturedMovie.Genres != null && Model.FeaturedMovie.Genres.Any() ? string.Join(", ", Model.FeaturedMovie.Genres.Select(g => g.Name)) : "Chưa phân loại")</p>
						</div>

						<div class="ratings-section">
							<div class="rating-item">
								<i class="fas fa-clock"></i>
								<span id="duration">@Model.FeaturedMovie.RunningTime phút</span>
							</div>
						</div>

						<div class="action-buttons">
							<button class="btn-primary" onclick="bookTickets()">
								<i class="fas fa-ticket-alt"></i>
								Đặt vé ngay
							</button>
							<button class="btn-secondary" onclick="showMovieInfo()">
								<i class="fas fa-info-circle"></i>
								Thông tin phim
							</button>
						</div>
					</div>
				</div>
			}
			else
			{
				<div class="movie-info">
					<div class="loading-container">
						<i class="fas fa-spinner fa-spin fa-2x"></i>
						<h3>Đang tải dữ liệu phim...</h3>
					</div>
				</div>
			}
		</div>

		
		<div class="movie-controls">
			<div class="control-left">
				<button class="nav-btn" onclick="previousMovie()">
					<i class="fas fa-chevron-left"></i>
				</button>
			</div>

			<div class="pagination-dots" id="paginationDots">
				@if (Model?.HeroMovies != null && Model.HeroMovies.Any())
				{
					for (int i = 0; i < Model.HeroMovies.Count; i++)
					{
						<span class="dot @(i == 0 ? "active" : "")" data-index="@i"></span>
					}
				}
				else
				{
					<span class="dot active"></span>
				}
			</div>

			<div class="control-right">
				<button class="nav-btn" onclick="nextMovie()">
					<i class="fas fa-chevron-right"></i>
				</button>
			</div>
		</div>
	</div>

	<!-- Phim Đề Xuất - Thiết kế mới nhất quán -->
	<div class="recommended-section-new">
		<div class="section-title-bar">
			<h2><i class="fas fa-star"></i> Phim Đề Xuất</h2>
			<a href="@Url.Action("Index", "Movies")" class="view-all-link">
				Xem tất cả <i class="fas fa-chevron-right"></i>
			</a>
		</div>

		<!-- Bộ lọc và sắp xếp cho Phim Đề Xuất -->
		<div class="pagination-controls">
			<div class="sort-filter-controls">
				<div class="filter-group">
					<label class="filter-label">
						<i class="fas fa-sort"></i>
						<span>Sắp xếp theo</span>
					</label>
					<select id="recommendedSort" class="pagination-select">
						<option value="createdAt-desc">Mới nhất</option>
						<option value="rating-desc">Đánh giá cao nhất</option>
						<option value="title-asc">Tên A-Z</option>
						<option value="releaseDate-desc">Ngày phát hành gần nhất</option>
					</select>
				</div>

				<div class="filter-group">
					<label class="filter-label">
						<i class="fas fa-theater-masks"></i>
						<span>Thể loại</span>
					</label>
					<select id="recommendedGenre" class="pagination-select">
						<option value="all">Tất cả thể loại</option>
						<option value="hành động">Hành động</option>
						<option value="tình cảm">Tình cảm</option>
						<option value="kinh dị">Kinh dị</option>
						<option value="hài">Hài</option>
						<option value="khoa học viễn tưởng">Khoa học viễn tưởng</option>
						<option value="phiêu lưu">Phiêu lưu</option>
					</select>
				</div>

				<div class="filter-group">
					<label class="filter-label">
						<i class="fas fa-eye"></i>
						<span>Hiển thị</span>
					</label>
					<select id="recommendedPageSize" class="pagination-select">
						<option value="6">6 phim</option>
						<option value="8">8 phim</option>
						<option value="12">12 phim</option>
					</select>
				</div>
			</div>

			<!-- Thông tin phân trang cho Phim Đề Xuất -->
			<div class="pagination-info" id="recommendedInfo">
				<div class="info-content">
					<i class="fas fa-info-circle"></i>
					<span>Trang 1 / 1 (0 phim)</span>
				</div>
			</div>
		</div>

		<div class="recommended-content">
			<div class="recommended-grid">
				@if (Model?.RecommendedMovies != null && Model.RecommendedMovies.Any())
				{


					foreach (var movie in Model.RecommendedMovies.Take(5))
					{
						<div class="recommended-item movie-card">
							<div class="recommended-poster movie-poster">
								@{
									string imageUrl = movie.PrimaryImageUrl ?? movie.ImageUrl;
									if (string.IsNullOrEmpty(imageUrl) && movie.Images != null && movie.Images.Any())
									{
										var primaryImage = movie.Images.FirstOrDefault(img => img.IsPrimary) ?? movie.Images.First();
										imageUrl = primaryImage?.ImageUrl ?? "";
									}
									imageUrl = imageUrl ?? "https://via.placeholder.com/300x450/1a1a1a/ffffff?text=No+Image";
								}
								<img src="@imageUrl" alt="@movie.Title" loading="lazy"
									 onerror="this.src='https://via.placeholder.com/300x450/1a1a1a/ffffff?text=No+Image'">
								<div class="recommended-overlay">
									<a href="@Url.Action("Details", "Movies", new { id = movie.Id })" class="recommended-view-btn">
										<i class="fas fa-info-circle"></i>
										Xem Chi Tiết
									</a>
								</div>
								<div class="recommended-rating">
									<i class="fas fa-star"></i> @movie.Rating.ToString("F1")
								</div>
							</div>
							<div class="recommended-info movie-info-home">
								<span class="recommended-genre badge-genre-home">
									@(movie.Genres != null && movie.Genres.Any() ? movie.Genres.First().Name : "Chưa phân loại")
								</span>
								<h3 class="recommended-title movie-title-home">@movie.Title</h3>
								<div class="recommended-meta">
									<div class="recommended-duration">
										<i class="fas fa-clock"></i>
										<span>@movie.RunningTime phút</span>
									</div>
									<span>@movie.ReleaseDate.Year</span>
								</div>
							</div>
						</div>
					}

				}

				else

				{
					<!-- Empty state khi không có phim đề xuất -->
					<div class="empty-state">
						<div class="empty-state-content">
							<i class="fas fa-film fa-3x text-muted mb-3"></i>
							<h4>Chưa có phim đề xuất</h4>
							<p>Hiện tại chưa có phim nào được đánh dấu là đề xuất.</p>
							<a href="@Url.Action("Index", "Movies")" class="btn btn-primary">
								<i class="fas fa-search"></i> Xem tất cả phim
							</a>
						</div>
					</div>
				}
			</div>

			<!-- Thêm nút "Xem thêm" vào đây, sau grid phim -->
			<button id="loadMoreRecommended" class="btn-load-more">
				<i class="fas fa-chevron-down"></i>
				<span>Xem thêm</span>
			</button>
		</div>
	</div>

	<!-- Phim Sắp Chiếu - Full Width như Phim đề xuất -->
	
	<!-- Phim Sắp Chiếu - Thiết kế mới -->
	<div class="recommended-section-new">
		<div class="section-title-bar">
			<h2><i class="fas fa-film"></i> Phim Sắp Chiếu</h2>
			<a href="@Url.Action("Index", "Movies")" class="view-all-link">
				Xem tất cả <i class="fas fa-chevron-right"></i>
			</a>
		</div>

		<!-- Bộ lọc và sắp xếp -->
		<div class="pagination-controls">
			<div class="sort-filter-controls">
				<div class="filter-group">
					<label class="filter-label">
						<i class="fas fa-calendar-alt"></i>
						<span>Sắp xếp theo</span>
					</label>
					<select id="comingSoonSort" class="pagination-select">
						<option value="releaseDate-asc">Ngày chiếu gần nhất</option>
						<option value="releaseDate-desc">Ngày chiếu xa nhất</option>
						<option value="title-asc">Tên A-Z</option>
						<option value="rating-desc">Đánh giá cao nhất</option>
					</select>
				</div>

				<div class="filter-group">
					<label class="filter-label">
						<i class="fas fa-theater-masks"></i>
						<span>Thể loại</span>
					</label>
					<select id="comingSoonGenre" class="pagination-select">
						<option value="all">Tất cả thể loại</option>
						<option value="hành động">Hành động</option>
						<option value="tình cảm">Tình cảm</option>
						<option value="kinh dị">Kinh dị</option>
						<option value="hài">Hài</option>
						<option value="khoa học viễn tưởng">Khoa học viễn tưởng</option>
						<option value="phiêu lưu">Phiêu lưu</option>
					</select>
				</div>

				<div class="filter-group">
					<label class="filter-label">
						<i class="fas fa-eye"></i>
						<span>Hiển thị</span>
					</label>
					<select id="comingSoonPageSize" class="pagination-select">
						<option value="4">4 phim</option>
						<option value="8">8 phim</option>
						<option value="12">12 phim</option>
					</select>
				</div>
			</div>

			<!-- Thông tin phân trang -->
			<div class="pagination-info" id="comingSoonInfo">
				<div class="info-content">
					<i class="fas fa-info-circle"></i>
					<span>Trang 1 / 1 (0 phim)</span>
				</div>
			</div>
		</div>

		
		<div class="recommended-grid">
			@if (Model?.ComingSoonMovies != null && Model.ComingSoonMovies.Any())
			{
				foreach (var movie in Model.ComingSoonMovies.Take(4))
				{
					<div class="recommended-item">
						<div class="recommended-poster">
							@{
								string imageUrl = movie.PrimaryImageUrl ?? movie.ImageUrl;
								if (string.IsNullOrEmpty(imageUrl) && movie.Images != null && movie.Images.Any())
								{
									var primaryImage = movie.Images.FirstOrDefault(img => img.IsPrimary) ?? movie.Images.First();
									imageUrl = primaryImage?.ImageUrl ?? "";
								}
								imageUrl = imageUrl ?? "https://via.placeholder.com/300x450/1a1a1a/ffffff?text=No+Image";
							}
							<img src="@imageUrl" alt="@movie.Title" loading="lazy"
								 onerror="this.src='https://via.placeholder.com/300x450/1a1a1a/ffffff?text=No+Image'">

							
							<div class="recommended-overlay">
								<a href="@Url.Action("Details", "Movies", new { id = movie.Id })" class="recommended-view-btn">
									<i class="fas fa-info-circle"></i>
									Xem Chi Tiết
								</a>
							</div>

							<!-- Ngày phát hành -->
							<div class="recommended-release-date">
								<i class="fas fa-calendar-alt"></i> @movie.ReleaseDate.ToString("dd/MM/yyyy")
							</div>

							<!-- Đánh giá sao -->
							@if (movie.Rating > 0)
							{
								<div class="recommended-rating">
									<i class="fas fa-star"></i> @movie.Rating.ToString("F1")
								</div>
							}
						</div>

						<!-- Thông tin phim -->
						<div class="recommended-info">
							<!-- Thể loại -->
							<span class="recommended-genre">
								@(movie.Genres != null && movie.Genres.Any() ? movie.Genres.First().Name : "Chưa phân loại")
							</span>

							<!-- Tiêu đề -->
							<h3 class="recommended-title">@movie.Title</h3>

							<!-- Thông tin thêm -->
							<div class="recommended-meta">
								<div class="recommended-duration">
									<i class="fas fa-clock"></i>
									<span>@movie.RunningTime phút</span>
								</div>
								<span>@movie.ReleaseDate.Year</span>
							</div>
						</div>
					</div>
				}
			}
			else
			{
				<!-- Trạng thái trống -->
				<div class="empty-state">
					<div class="empty-state-content">
						<i class="fas fa-calendar-alt fa-3x text-muted mb-3"></i>
						<h4>Chưa có phim sắp chiếu</h4>
						<p>Hiện tại chưa có phim nào trong trạng thái sắp chiếu.</p>
						<a href="@Url.Action("Index", "Movies")" class="btn btn-primary">
							<i class="fas fa-search"></i> Xem tất cả phim
						</a>
					</div>
				</div>
			}
		</div>

		<!-- Nút xem thêm -->
		<button id="loadMoreComingSoon" class="btn-load-more">
			<i class="fas fa-chevron-down"></i>
			<span>Xem thêm</span>
		</button>
	</div>

	<!-- Khuyến Mãi - Independent Section -->
	<div class="recommended-section-new">
		<div class="section-title-bar">
			<h2><i class="fas fa-tags"></i> Khuyến Mãi</h2>
			<a href="@Url.Action("Index", "Promotions")" class="view-all-link">
				Xem tất cả <i class="fas fa-chevron-right"></i>
			</a>
		</div>
		<div class="recommended-content">
			<div class="recommended-grid">
				@if (Model?.Promotions != null && Model.Promotions.Any())
				{
					foreach (var promo in Model.Promotions.Take(4))
					{
						<div class="recommended-item">
							<div class="recommended-poster">
								<img src="@promo.ImageUrl" alt="@promo.Title"
									 onerror="this.src='https://via.placeholder.com/300x450/df2144/ffffff?text=Khuyến+Mãi'">
								<div class="recommended-overlay">
									<a href="@Url.Action("Index", "Promotions")" class="recommended-view-btn">
										<i class="fas fa-tag"></i>
										Xem Chi Tiết
									</a>
								</div>
								
								<div class="recommended-promotion-badge">
									<i class="fas fa-percentage"></i> Khuyến Mãi
								</div>
							</div>
							<div class="recommended-info">
								<span class="recommended-genre">
									<i class="fas fa-calendar-alt"></i>
									@promo.StartDate.ToString("dd/MM") - @promo.EndDate.ToString("dd/MM/yyyy")
								</span>
								<h3 class="recommended-title">@promo.Title</h3>
								<div class="recommended-meta">
									<div class="recommended-description">
										<i class="fas fa-info-circle"></i>
										<span>@(promo.Description.Length > 50 ? promo.Description.Substring(0, 50) + "..." : promo.Description)</span>
									</div>
								</div>
							</div>
						</div>
					}
				}
				else
				{
					<!-- Dữ liệu mẫu khi không có khuyến mãi -->
					<div class="recommended-item">
						<div class="recommended-poster">
							<img src="https://via.placeholder.com/300x450/df2144/ffffff?text=2+1" alt="Mua 2 tặng 1">
							<div class="recommended-overlay">
								<a href="@Url.Action("Index", "Promotions")" class="recommended-view-btn">
									<i class="fas fa-tag"></i>
									Xem Chi Tiết
								</a>
							</div>
							<div class="recommended-promotion-badge">
								<i class="fas fa-gift"></i> Mua 2 Tặng 1
							</div>
						</div>
						<div class="recommended-info">
							<span class="recommended-genre">
								<i class="fas fa-calendar-alt"></i>
								01/06 - 30/06/2024
							</span>
							<h3 class="recommended-title">Mua 2 tặng 1 vé xem phim</h3>
							<div class="recommended-meta">
								<div class="recommended-description">
									<i class="fas fa-info-circle"></i>
									<span>Mua 2 vé được tặng 1 vé miễn phí cùng ngày...</span>
								</div>
							</div>
						</div>
					</div>
					<div class="recommended-item">
						<div class="recommended-poster">
							<img src="https://via.placeholder.com/300x450/df2144/ffffff?text=50%" alt="Giảm giá">
							<div class="recommended-overlay">
								<a href="@Url.Action("Index", "Promotions")" class="recommended-view-btn">
									<i class="fas fa-tag"></i>
									Xem Chi Tiết
								</a>
							</div>
							<div class="recommended-promotion-badge">
								<i class="fas fa-percentage"></i> Giảm 50%
							</div>
						</div>
						<div class="recommended-info">
							<span class="recommended-genre">
								<i class="fas fa-calendar-alt"></i>
								15/06 - 15/07/2024
							</span>
							<h3 class="recommended-title">Giảm 50% combo bắp nước</h3>
							<div class="recommended-meta">
								<div class="recommended-description">
									<i class="fas fa-info-circle"></i>
									<span>Giảm giá 50% combo vào thứ 3 và thứ 4...</span>
								</div>
							</div>
						</div>
					</div>
					<div class="recommended-item">
						<div class="recommended-poster">
							<img src="https://via.placeholder.com/300x450/df2144/ffffff?text=VIP" alt="Thành viên">
							<div class="recommended-overlay">
								<a href="@Url.Action("Index", "Promotions")" class="recommended-view-btn">
									<i class="fas fa-tag"></i>
									Xem Chi Tiết
								</a>
							</div>
							<div class="recommended-promotion-badge">
								<i class="fas fa-crown"></i> VIP
							</div>
						</div>
						<div class="recommended-info">
							<span class="recommended-genre">
								<i class="fas fa-calendar-alt"></i>
								01/06 - 31/12/2024
							</span>
							<h3 class="recommended-title">Ưu đãi thành viên mới</h3>
							<div class="recommended-meta">
								<div class="recommended-description">
									<i class="fas fa-info-circle"></i>
									<span>Đăng ký mới nhận 2 vé và combo miễn phí...</span>
								</div>
							</div>
						</div>
					</div>
					<div class="recommended-item">
						<div class="recommended-poster">
							<img src="https://via.placeholder.com/300x450/df2144/ffffff?text=BDAY" alt="Sinh nhật">
							<div class="recommended-overlay">
								<a href="@Url.Action("Index", "Promotions")" class="recommended-view-btn">
									<i class="fas fa-tag"></i>
									Xem Chi Tiết
								</a>
							</div>
							<div class="recommended-promotion-badge">
								<i class="fas fa-birthday-cake"></i> Sinh Nhật
							</div>
						</div>
						<div class="recommended-info">
							<span class="recommended-genre">
								<i class="fas fa-calendar-alt"></i>
								Quanh năm
							</span>
							<h3 class="recommended-title">Ưu đãi sinh nhật</h3>
							<div class="recommended-meta">
								<div class="recommended-description">
									<i class="fas fa-info-circle"></i>
									<span>Miễn phí 1 vé trong tháng sinh nhật...</span>
								</div>
							</div>
						</div>
					</div>
				}
			</div>
		</div>
	</div>
</div>
</div>

@section Scripts {
	<script>
		// Truyền dữ liệu phim từ Model vào JavaScript
		window.heroMoviesData = @Html.Raw(JsonSerializer.Serialize((Model?.HeroMovies ?? new List<MovieViewModel>()).Select(movie => new
			{

				id = movie.Id,

				title = movie.Title,

				titleVn = movie.Director ?? "Đạo diễn",

				plot = movie.Content ?? "Chưa có thông tin nội dung.",

				genre = (movie.Genres != null && movie.Genres.Any()) ? string.Join(", ", movie.Genres.Select(g => g.Name)) : "Chưa phân loại",

				duration = $"{movie.RunningTime} phút",

				background = GetMovieImageUrl(movie),

				trailerUrl = movie.TrailerUrl ?? ""

			})));

		// 🔍 DEBUG: Kiểm tra data source
		console.log('📊 MOVIE DATA SOURCE CHECK:');
		console.log('Total movies:', window.heroMoviesData?.length || 0);

		if (window.heroMoviesData && window.heroMoviesData.length > 0) {
			const firstMovie = window.heroMoviesData[0];
			console.log('First movie ID:', firstMovie.id);
			console.log('First movie title:', firstMovie.title);

			// 🖼️ DEBUG: Kiểm tra background URLs
			console.log('🖼️ BACKGROUND URL CHECK:');
			window.heroMoviesData.forEach((movie, index) => {
				console.log(`${index + 1}. ${movie.title} -> ${movie.background}`);
			});

			// Kiểm tra xem có phải data từ API không
			const isFromAPI = firstMovie.id && firstMovie.id.includes('00000000-0000-0000-0000-');
			const isFromFallback = firstMovie.id && (firstMovie.id === '1' || firstMovie.id === '2' || firstMovie.id === '3');

			if (isFromAPI) {
				console.log('✅ USING API DATA - Backend working!');
				console.log('🎬 Movies from database:', window.heroMoviesData.map(m => m.title));
			} else if (isFromFallback) {
				console.log('⚠️ USING FALLBACK DATA - API might be down');
				console.log('🎬 Fallback movies:', window.heroMoviesData.map(m => m.title));
			} else {
				console.log('❓ UNKNOWN DATA SOURCE');
				console.log('🎬 All movies:', window.heroMoviesData);
			}
		} else {
			console.log('❌ NO MOVIE DATA AVAILABLE');
		}

		window.movieUrls = {
			moviesIndex: '@Url.Action("Index", "Movies")',
			movieDetails: '@Url.Action("Details", "Movies")'
		};


		document.addEventListener('DOMContentLoaded', function () {
			const userDropdown = document.getElementById('userDropdown');
			const dropdownMenu = document.querySelector('.dropdown-menu');

			if (userDropdown && dropdownMenu) {

				userDropdown.addEventListener('click', function (e) {
					e.preventDefault();
					e.stopPropagation();


					const isShowing = dropdownMenu.classList.contains('show');

					if (isShowing) {
						dropdownMenu.classList.remove('show');
						userDropdown.setAttribute('aria-expanded', 'false');
					} else {
						dropdownMenu.classList.add('show');
						userDropdown.setAttribute('aria-expanded', 'true');
					}
				});


				userDropdown.addEventListener('click', function (e) {
					e.stopPropagation();
				}, true);


				document.addEventListener('click', function (e) {
					if (!userDropdown.contains(e.target) && !dropdownMenu.contains(e.target)) {
						dropdownMenu.classList.remove('show');
						userDropdown.setAttribute('aria-expanded', 'false');
					}
				});


				document.addEventListener('keydown', function (e) {
					if (e.key === 'Escape' && dropdownMenu.classList.contains('show')) {
						dropdownMenu.classList.remove('show');
						userDropdown.setAttribute('aria-expanded', 'false');
						userDropdown.focus();
					}
				});
			}
		});


		document.addEventListener('DOMContentLoaded', function () {
			const searchInput = document.getElementById('movieSearchInput');
			const searchButton = document.getElementById('searchButton');


			searchButton?.addEventListener('click', function () {
				performSearch();
			});


			searchInput?.addEventListener('keypress', function (e) {
				if (e.key === 'Enter') {
					performSearch();
				}
			});

			async function performSearch() {
				const keyword = searchInput.value.trim();


				const searchUrl = '@Url.Action("Search", "Movies")' + (keyword ? `?keyword=${encodeURIComponent(keyword)}` : '');
				window.location.href = searchUrl;
			}
		});


		if (window.location.search.includes('debug=true')) {
			document.addEventListener('DOMContentLoaded', function() {
				const testButton = document.createElement('button');
				testButton.textContent = 'TEST NAVIGATE TO MOVIE';
				testButton.style.position = 'fixed';
				testButton.style.top = '10px';
				testButton.style.right = '10px';
				testButton.style.zIndex = '99999';
				testButton.style.background = 'red';
				testButton.style.color = 'white';
				testButton.style.padding = '10px';
				testButton.style.border = 'none';
				testButton.style.cursor = 'pointer';
				
				testButton.addEventListener('click', function() {
					console.log('🧪 Test button clicked');
					window.location.href = '/Movies/Details/11111111-1111-1111-1111-0000000000a1';
				});
				
				document.body.appendChild(testButton);
			});
		}
	</script>
	<script src="~/js/homepage.js"></script>
<script src="~/js/homepage-debug.js"></script>
	<script src="~/js/movie-card-debug.js"></script>
	<script src="~/js/dropdown-debug.js"></script>
	<script src="~/js/force-navigation.js"></script>
	<script src="~/js/pagination-debug.js"></script>
}

@functions {
	private string GetMovieImageUrl(MovieViewModel movie)
	{
		return movie.PrimaryImageUrl

			?? movie.ImageUrl
			?? movie.Images?.FirstOrDefault(img => img.IsPrimary)?.ImageUrl
			?? movie.Images?.FirstOrDefault()?.ImageUrl
			?? "https://via.placeholder.com/300x450/1a1a1a/ffffff?text=No+Image";
	}
	private string GetMovieDescription(string? content)

	{

		if (string.IsNullOrEmpty(content)) return "Chưa có thông tin nội dung.";

		return content.Length > 150 ? content[..150] + "..." : content;

	}
}
