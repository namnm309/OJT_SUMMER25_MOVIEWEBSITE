@{
    ViewData["Title"] = "Quản lý sản phẩm";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Quản lý sản phẩm</h1>
        <button class="btn btn-primary" id="btnAddNew">
            <i class="fas fa-plus"></i> Thêm sản phẩm mới
        </button>
    </div>
    
    <div class="card">
        <div class="card-header">
            <div class="row">
                <div class="col-md-6">
                    <input type="text" class="form-control" id="searchInput" placeholder="Tìm kiếm sản phẩm...">
                </div>
                <div class="col-md-3">
                    <select class="form-control" id="filterActive">
                        <option value="">Tất cả trạng thái</option>
                        <option value="true">Đang hoạt động</option>
                        <option value="false">Không hoạt động</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <button class="btn btn-outline-primary w-100" id="btnSearch">
                        <i class="fas fa-search"></i> Tìm kiếm
                    </button>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Hình ảnh</th>
                            <th>Tên sản phẩm</th>
                            <th>Mô tả</th>
                            <th>Giá</th>
                            <th>Trạng thái</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody id="productsTableBody">
                        <!-- Dữ liệu sẽ được JavaScript điền vào đây -->
                    </tbody>
                </table>
            </div>
            
            <div class="d-flex justify-content-between align-items-center mt-4">
                <div>
                    <span id="totalItems">0</span> sản phẩm
                </div>
                <ul class="pagination" id="pagination">
                    <!-- Phân trang sẽ được JavaScript điền vào đây -->
                </ul>
            </div>
        </div>
    </div>
</div>

<!-- Modal thêm/sửa sản phẩm -->
<div class="modal fade" id="productModal" tabindex="-1" aria-labelledby="productModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="productModalLabel">Thêm sản phẩm mới</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="productForm">
                    <input type="hidden" id="productId">
                    
                    <div class="mb-3">
                        <label for="productName" class="form-label">Tên sản phẩm</label>
                        <input type="text" class="form-control" id="productName" required maxlength="100">
                    </div>
                    
                    <div class="mb-3">
                        <label for="productDescription" class="form-label">Mô tả</label>
                        <textarea class="form-control" id="productDescription" rows="3" maxlength="255"></textarea>
                    </div>
                    
                    <div class="mb-3">
                        <label for="productPrice" class="form-label">Giá (VNĐ)</label>
                        <input type="number" class="form-control" id="productPrice" required min="0">
                    </div>
                    
                    <div class="mb-3">
                        <label for="productImageUrl" class="form-label">URL hình ảnh</label>
                        <input type="text" class="form-control" id="productImageUrl" maxlength="255">
                    </div>
                    
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="productIsActive" checked>
                        <label class="form-check-label" for="productIsActive">
                            Đang hoạt động
                        </label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" id="btnSaveProduct">Lưu</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const apiBaseUrl = window.location.protocol === 'https:' ? 'https://localhost:7049/api' : 'http://localhost:5274/api';
            let currentPage = 1;
            let pageSize = 10;
            let searchTerm = '';
            let isActive = null;
            
            // Elements
            const productsTableBody = document.getElementById('productsTableBody');
            const totalItemsElement = document.getElementById('totalItems');
            const paginationElement = document.getElementById('pagination');
            const searchInput = document.getElementById('searchInput');
            const filterActive = document.getElementById('filterActive');
            const btnSearch = document.getElementById('btnSearch');
            const btnAddNew = document.getElementById('btnAddNew');
            const productModal = new bootstrap.Modal(document.getElementById('productModal'));
            const productForm = document.getElementById('productForm');
            const productId = document.getElementById('productId');
            const productName = document.getElementById('productName');
            const productDescription = document.getElementById('productDescription');
            const productPrice = document.getElementById('productPrice');
            const productImageUrl = document.getElementById('productImageUrl');
            const productIsActive = document.getElementById('productIsActive');
            const btnSaveProduct = document.getElementById('btnSaveProduct');
            
            // Fetch products
            async function fetchProducts() {
                try {
                    const url = '/ConcessionManagement/Products/GetAll';
                    const response = await fetch(url);
                    
                    if (!response.ok) {
                        throw new Error('Không thể lấy dữ liệu sản phẩm');
                    }
                    
                    const data = await response.json();
                    renderProducts(data);
                    totalItemsElement.textContent = data.length;
                } catch (error) {
                    console.error('Lỗi:', error);
                    productsTableBody.innerHTML = `<tr><td colspan="6" class="text-center text-danger">Không thể tải sản phẩm. Vui lòng thử lại sau.</td></tr>`;
                }
            }
            
            // Render products
            function renderProducts(products) {
                if (!products || products.length === 0) {
                    productsTableBody.innerHTML = `<tr><td colspan="6" class="text-center">Không tìm thấy sản phẩm nào.</td></tr>`;
                    return;
                }
                
                productsTableBody.innerHTML = '';
                
                products.forEach(product => {
                    const row = document.createElement('tr');
                    
                    row.innerHTML = `
                        <td>
                            <img src="${product.imageUrl || 'https://via.placeholder.com/50x50'}" alt="${product.name}" 
                                 style="width: 50px; height: 50px; object-fit: cover; border-radius: 5px;">
                        </td>
                        <td>${product.name}</td>
                        <td>${product.description || 'Không có mô tả'}</td>
                        <td>${product.price.toLocaleString('vi-VN')}đ</td>
                        <td>
                            <span class="badge ${product.isActive ? 'bg-success' : 'bg-danger'}">
                                ${product.isActive ? 'Hoạt động' : 'Không hoạt động'}
                            </span>
                        </td>
                        <td>
                            <button class="btn btn-sm btn-info me-1 btn-edit" data-id="${product.id}">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn btn-sm btn-danger btn-delete" data-id="${product.id}">
                                <i class="fas fa-trash"></i>
                            </button>
                        </td>
                    `;
                    
                    productsTableBody.appendChild(row);
                });
                
                // Add event listeners to edit and delete buttons
                document.querySelectorAll('.btn-edit').forEach(button => {
                    button.addEventListener('click', function() {
                        const id = this.getAttribute('data-id');
                        editProduct(id);
                    });
                });
                
                document.querySelectorAll('.btn-delete').forEach(button => {
                    button.addEventListener('click', function() {
                        const id = this.getAttribute('data-id');
                        if (confirm('Bạn có chắc chắn muốn xóa sản phẩm này?')) {
                            deleteProduct(id);
                        }
                    });
                });
            }
            
            // Render pagination
            function renderPagination(page, pageSize, total) {
                const totalPages = Math.ceil(total / pageSize);
                
                let paginationHTML = `
                    <li class="page-item ${page === 1 ? 'disabled' : ''}">
                        <a class="page-link" href="#" data-page="${page - 1}" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                `;
                
                for (let i = 1; i <= totalPages; i++) {
                    paginationHTML += `
                        <li class="page-item ${i === page ? 'active' : ''}">
                            <a class="page-link" href="#" data-page="${i}">${i}</a>
                        </li>
                    `;
                }
                
                paginationHTML += `
                    <li class="page-item ${page === totalPages ? 'disabled' : ''}">
                        <a class="page-link" href="#" data-page="${page + 1}" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                `;
                
                paginationElement.innerHTML = paginationHTML;
                
                // Add event listeners to pagination links
                document.querySelectorAll('.page-link').forEach(link => {
                    link.addEventListener('click', function(e) {
                        e.preventDefault();
                        const newPage = parseInt(this.getAttribute('data-page'));
                        if (newPage && newPage !== currentPage && newPage > 0 && newPage <= totalPages) {
                            currentPage = newPage;
                            fetchProducts();
                        }
                    });
                });
            }
            
            // Edit product
            async function editProduct(id) {
                try {
                    const response = await fetch(`${apiBaseUrl}/ConcessionItems/${id}`);
                    if (!response.ok) {
                        throw new Error('Không thể lấy thông tin sản phẩm');
                    }
                    
                    const product = await response.json();
                    
                    // Fill form
                    productId.value = product.id;
                    productName.value = product.name;
                    productDescription.value = product.description || '';
                    productPrice.value = product.price;
                    productImageUrl.value = product.imageUrl || '';
                    productIsActive.checked = product.isActive;
                    
                    // Change modal title
                    document.getElementById('productModalLabel').textContent = 'Chỉnh sửa sản phẩm';
                    
                    // Show modal
                    productModal.show();
                } catch (error) {
                    console.error('Lỗi:', error);
                    alert('Không thể lấy thông tin sản phẩm. Vui lòng thử lại sau.');
                }
            }
            
            // Save product (create or update)
            async function saveProduct() {
                if (!productForm.checkValidity()) {
                    productForm.reportValidity();
                    return;
                }
                
                const product = {
                    name: productName.value,
                    description: productDescription.value,
                    price: parseFloat(productPrice.value),
                    imageUrl: productImageUrl.value,
                    isActive: productIsActive.checked
                };
                
                const isEditing = productId.value !== '';
                const url = isEditing 
                    ? `${apiBaseUrl}/ConcessionItems/${productId.value}` 
                    : `${apiBaseUrl}/ConcessionItems`;
                const method = isEditing ? 'PUT' : 'POST';
                
                try {
                    const response = await fetch(url, {
                        method: method,
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(product)
                    });
                    
                    if (!response.ok) {
                        throw new Error('Không thể lưu sản phẩm');
                    }
                    
                    productModal.hide();
                    fetchProducts(); // Refresh the list
                    resetForm();
                    alert(isEditing ? 'Cập nhật sản phẩm thành công!' : 'Thêm sản phẩm mới thành công!');
                } catch (error) {
                    console.error('Lỗi:', error);
                    alert('Không thể lưu sản phẩm. Vui lòng thử lại sau.');
                }
            }
            
            // Delete product
            async function deleteProduct(id) {
                try {
                    const response = await fetch(`${apiBaseUrl}/ConcessionItems/${id}`, {
                        method: 'DELETE'
                    });
                    
                    if (!response.ok) {
                        throw new Error('Không thể xóa sản phẩm');
                    }
                    
                    fetchProducts(); // Refresh the list
                    alert('Xóa sản phẩm thành công!');
                } catch (error) {
                    console.error('Lỗi:', error);
                    alert('Không thể xóa sản phẩm. Vui lòng thử lại sau.');
                }
            }
            
            // Reset form
            function resetForm() {
                productId.value = '';
                productForm.reset();
                document.getElementById('productModalLabel').textContent = 'Thêm sản phẩm mới';
                productIsActive.checked = true;
            }
            
            // Event listeners
            btnSearch.addEventListener('click', function() {
                searchTerm = searchInput.value;
                isActive = filterActive.value === '' ? null : filterActive.value === 'true';
                currentPage = 1;
                fetchProducts();
            });
            
            btnAddNew.addEventListener('click', function() {
                resetForm();
                productModal.show();
            });
            
            btnSaveProduct.addEventListener('click', saveProduct);
            
            // Initial load
            fetchProducts();
        });
    </script>
}
