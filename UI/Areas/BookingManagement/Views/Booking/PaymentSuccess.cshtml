@model BookingResultViewModel
@using System.Text.Json
@{
    ViewData["Title"] = "Thanh Toán Thành Công";
    Layout = "_Layout";
}

@{
    string bookingCode = "N/A", movieTitle = "N/A", cinemaRoomName = "N/A";
    string showDate = "N/A", showTime = "N/A", fullName = "N/A";
    string email = "N/A", phoneNumber = "N/A", identityCard = "N/A";
    string totalPriceFormatted = "0 VND";
    string bookedSeats = "N/A";
    string movieImage = "~/images/default-movie.jpg";
    string cinemaName = "Cinema City";
    string cinemaAddress = "Địa chỉ rạp chiếu phim";
    decimal totalPrice = 0;

    if (!string.IsNullOrEmpty(Model?.Data?.ToString()))
    {
        try
        {
            using var jsonDocument = JsonDocument.Parse(Model.Data.ToString());
            var root = jsonDocument.RootElement;

            // Trích xuất dữ liệu từ JSON
            if (root.TryGetProperty("bookingCode", out JsonElement bookingCodeElement))
                bookingCode = bookingCodeElement.GetString() ?? "N/A";

            if (root.TryGetProperty("movieTitle", out JsonElement movieTitleElement))
                movieTitle = movieTitleElement.GetString() ?? "N/A";

            if (root.TryGetProperty("cinemaRoomName", out JsonElement cinemaRoomElement))
                cinemaRoomName = cinemaRoomElement.GetString() ?? "N/A";

            if (root.TryGetProperty("showDate", out JsonElement showDateElement))
                showDate = showDateElement.GetString() ?? "N/A";

            if (root.TryGetProperty("showTime", out JsonElement showTimeElement))
                showTime = showTimeElement.GetString() ?? "N/A";

            if (root.TryGetProperty("fullName", out JsonElement fullNameElement))
                fullName = fullNameElement.GetString() ?? "N/A";

            if (root.TryGetProperty("email", out JsonElement emailElement))
                email = emailElement.GetString() ?? "N/A";

            if (root.TryGetProperty("phoneNumber", out JsonElement phoneNumberElement))
                phoneNumber = phoneNumberElement.GetString() ?? "N/A";

            if (root.TryGetProperty("identityCard", out JsonElement identityCardElement))
                identityCard = identityCardElement.GetString() ?? "N/A";

            if (root.TryGetProperty("cinemaName", out JsonElement cinemaNameElement))
                cinemaName = cinemaNameElement.GetString() ?? "Cinema City";

            if (root.TryGetProperty("cinemaAddress", out JsonElement cinemaAddressElement))
                cinemaAddress = cinemaAddressElement.GetString() ?? "Địa chỉ rạp chiếu phim";

            // Xử lý totalPrice
            if (root.TryGetProperty("totalPrice", out JsonElement totalPriceElement))
            {
                if (totalPriceElement.ValueKind == JsonValueKind.Number)
                {
                    totalPrice = totalPriceElement.GetDecimal();
                    totalPriceFormatted = string.Format("{0:N0} VND", totalPrice);
                }
                else if (totalPriceElement.ValueKind == JsonValueKind.String)
                {
                    var priceString = totalPriceElement.GetString();
                    if (decimal.TryParse(priceString, out decimal price))
                    {
                        totalPrice = price;
                        totalPriceFormatted = string.Format("{0:N0} VND", price);
                    }
                }
            }

            // Xử lý bookedSeats array
            if (root.TryGetProperty("bookedSeats", out JsonElement bookedSeatsElement) &&
                bookedSeatsElement.ValueKind == JsonValueKind.Array)
            {
                var seatCodes = new List<string>();
                foreach (var seat in bookedSeatsElement.EnumerateArray())
                {
                    if (seat.ValueKind == JsonValueKind.String)
                    {
                        var seatCode = seat.GetString();
                        if (!string.IsNullOrEmpty(seatCode))
                            seatCodes.Add(seatCode);
                    }
                    else if (seat.ValueKind == JsonValueKind.Object &&
                            seat.TryGetProperty("seatCode", out JsonElement seatCodeElement))
                    {
                        var seatCode = seatCodeElement.GetString();
                        if (!string.IsNullOrEmpty(seatCode))
                            seatCodes.Add(seatCode);
                    }
                }
                bookedSeats = seatCodes.Count > 0 ? string.Join(", ", seatCodes) : "N/A";
            }
        }
        catch (JsonException jsonEx)
        {
            // Log JSON parsing error
            <div style="color: red; margin-bottom: 10px;">Lỗi phân tích JSON: @jsonEx.Message</div>
        }
        catch (Exception ex)
        {
            // Log general error
            <div style="color: red; margin-bottom: 10px;">Lỗi: @ex.Message</div>
        }
    }
}

<style>
    body {
        background: linear-gradient(135deg, #0a0a0a 0%, #1a1a2e 50%, #16213e 100%);
        color: white;
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        min-height: 100vh;
        margin: 0;
        padding: 0;
    }

    .success-container {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        padding: 40px 20px;
        min-height: 100vh;
    }

    .success-message {
        text-align: center;
        padding: 40px;
        background: rgba(76, 175, 80, 0.1);
        border: 2px solid #4caf50;
        border-radius: 15px;
        margin-bottom: 30px;
        color: #4caf50;
        backdrop-filter: blur(10px);
        max-width: 600px;
        width: 100%;
    }

    .success-icon {
        font-size: 4rem;
        color: #4caf50;
        margin-bottom: 20px;
        animation: checkmark 0.6s ease-in-out;
    }

    @@keyframes checkmark {
        0% {
            transform: scale(0);
        }
        50% {
            transform: scale(1.2);
        }
        100% {
            transform: scale(1);
        }
    }

    .success-message h1 {
        font-size: 2.5rem;
        margin-bottom: 15px;
        font-weight: bold;
    }

    .success-message p {
        font-size: 1.2rem;
        margin-bottom: 20px;
        opacity: 0.9;
    }

    .booking-summary {
        background: rgba(255, 255, 255, 0.1);
        border-radius: 10px;
        padding: 20px;
        margin-top: 20px;
        backdrop-filter: blur(10px);
    }

    .summary-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
        padding: 5px 0;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .summary-row:last-child {
        border-bottom: none;
        font-weight: bold;
        font-size: 1.1rem;
        color: #4caf50;
    }

    .action-buttons {
        display: flex;
        gap: 1rem;
        justify-content: center;
        margin-top: 2rem;
        flex-wrap: wrap;
    }

    .btn {
        padding: 1rem 2rem;
        border-radius: 25px;
        border: none;
        font-weight: 600;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
        cursor: pointer;
        min-width: 150px;
        justify-content: center;
    }

    .btn-primary {
        background: linear-gradient(45deg, #4caf50, #66bb6a);
        color: white;
    }

    .btn-secondary {
        background: rgba(255, 255, 255, 0.1);
        color: white;
        border: 1px solid rgba(255, 255, 255, 0.3);
        backdrop-filter: blur(10px);
    }

    .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
    }

    .btn-primary:hover {
        background: linear-gradient(45deg, #66bb6a, #4caf50);
    }

    .btn-secondary:hover {
        background: rgba(255, 255, 255, 0.2);
        border-color: #4caf50;
    }

    @@media (max-width: 768px) {
        .success-message {
            padding: 30px 20px;
        }

        .success-message h1 {
            font-size: 2rem;
        }

        .action-buttons {
            flex-direction: column;
            align-items: center;
        }

        .btn {
            width: 100%;
            max-width: 300px;
        }
    }
</style>

<div class="success-container">
    <div class="success-message">
        <i class="fas fa-check-circle success-icon"></i>
        <h1>Thanh Toán Thành Công!</h1>
        <p>Cảm ơn bạn đã thanh toán. Vé của bạn đã được xác nhận thành công.</p>
        
        <div class="booking-summary">
            <h3 style="margin-bottom: 20px; color: #4caf50;">Thông Tin Đặt Vé</h3>
            <div class="summary-row">
                <span>Mã đặt vé:</span>
                <span><strong>@bookingCode</strong></span>
            </div>
            <div class="summary-row">
                <span>Phim:</span>
                <span><strong>@movieTitle</strong></span>
            </div>
            <div class="summary-row">
                <span>Phòng chiếu:</span>
                <span><strong>@cinemaRoomName</strong></span>
            </div>
            <div class="summary-row">
                <span>Ngày chiếu:</span>
                <span><strong>@showDate</strong></span>
            </div>
            <div class="summary-row">
                <span>Giờ chiếu:</span>
                <span><strong>@showTime</strong></span>
            </div>
            <div class="summary-row">
                <span>Ghế ngồi:</span>
                <span><strong>@bookedSeats</strong></span>
            </div>
            <div class="summary-row">
                <span>Tổng tiền:</span>
                <span><strong>@totalPriceFormatted</strong></span>
            </div>
        </div>
    </div>

    <div class="action-buttons">
        <a href="@Url.Action("BookingResult", "Booking", new { area = "BookingManagement" })" class="btn btn-primary">
            <i class="fas fa-ticket-alt"></i>
            Xem Vé Chi Tiết
        </a>
        <a href="@Url.Action("Index", "Movies", new { area = "" })" class="btn btn-secondary">
            <i class="fas fa-film"></i>
            Đặt Vé Mới
        </a>
        <a href="@Url.Action("Index", "Home", new { area = "" })" class="btn btn-secondary">
            <i class="fas fa-home"></i>
            Trang Chủ
        </a>
    </div>
</div>