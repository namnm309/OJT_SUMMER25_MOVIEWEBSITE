@model BookingResultViewModel
@using System.Text.Json
@{
    ViewData["Title"] = "Thanh Toán Thành Công";
    Layout = "_Layout";
}

@{
    string bookingCode = "N/A", movieTitle = "N/A", cinemaRoomName = "N/A";
    string showDate = "N/A", showTime = "N/A", fullName = "N/A";
    string email = "N/A", phoneNumber = "N/A", identityCard = "N/A";
    string totalPriceFormatted = "0 VND";
    string bookedSeats = "N/A";
    string movieImage = "~/images/default-movie.jpg";
    string cinemaName = "Cinema City";
    string cinemaAddress = "Địa chỉ rạp chiếu phim";
    decimal totalPrice = 0;

    if (!string.IsNullOrEmpty(Model?.Data?.ToString()))
    {
        try
        {
            using var jsonDocument = JsonDocument.Parse(Model.Data.ToString());
            var root = jsonDocument.RootElement;

            // Trích xuất dữ liệu từ JSON
            if (root.TryGetProperty("bookingCode", out JsonElement bookingCodeElement))
                bookingCode = bookingCodeElement.GetString() ?? "N/A";

            if (root.TryGetProperty("movieTitle", out JsonElement movieTitleElement))
                movieTitle = movieTitleElement.GetString() ?? "N/A";

            if (root.TryGetProperty("cinemaRoomName", out JsonElement cinemaRoomElement))
                cinemaRoomName = cinemaRoomElement.GetString() ?? "N/A";

            if (root.TryGetProperty("showDate", out JsonElement showDateElement))
                showDate = showDateElement.GetString() ?? "N/A";

            if (root.TryGetProperty("showTime", out JsonElement showTimeElement))
                showTime = showTimeElement.GetString() ?? "N/A";

            if (root.TryGetProperty("fullName", out JsonElement fullNameElement))
                fullName = fullNameElement.GetString() ?? "N/A";

            if (root.TryGetProperty("email", out JsonElement emailElement))
                email = emailElement.GetString() ?? "N/A";

            if (root.TryGetProperty("phoneNumber", out JsonElement phoneNumberElement))
                phoneNumber = phoneNumberElement.GetString() ?? "N/A";

            if (root.TryGetProperty("identityCard", out JsonElement identityCardElement))
                identityCard = identityCardElement.GetString() ?? "N/A";

            if (root.TryGetProperty("cinemaName", out JsonElement cinemaNameElement))
                cinemaName = cinemaNameElement.GetString() ?? "Cinema City";

            if (root.TryGetProperty("cinemaAddress", out JsonElement cinemaAddressElement))
                cinemaAddress = cinemaAddressElement.GetString() ?? "Địa chỉ rạp chiếu phim";

            // Xử lý totalPrice
            if (root.TryGetProperty("totalPrice", out JsonElement totalPriceElement))
            {
                if (totalPriceElement.ValueKind == JsonValueKind.Number)
                {
                    totalPrice = totalPriceElement.GetDecimal();
                    totalPriceFormatted = string.Format("{0:N0} VND", totalPrice);
                }
                else if (totalPriceElement.ValueKind == JsonValueKind.String)
                {
                    var priceString = totalPriceElement.GetString();
                    if (decimal.TryParse(priceString, out decimal price))
                    {
                        totalPrice = price;
                        totalPriceFormatted = string.Format("{0:N0} VND", price);
                    }
                }
            }

            // Xử lý bookedSeats array
            if (root.TryGetProperty("bookedSeats", out JsonElement bookedSeatsElement) &&
                bookedSeatsElement.ValueKind == JsonValueKind.Array)
            {
                var seatCodes = new List<string>();
                foreach (var seat in bookedSeatsElement.EnumerateArray())
                {
                    if (seat.ValueKind == JsonValueKind.String)
                    {
                        var seatCode = seat.GetString();
                        if (!string.IsNullOrEmpty(seatCode))
                            seatCodes.Add(seatCode);
                    }
                    else if (seat.ValueKind == JsonValueKind.Object &&
                            seat.TryGetProperty("seatCode", out JsonElement seatCodeElement))
                    {
                        var seatCode = seatCodeElement.GetString();
                        if (!string.IsNullOrEmpty(seatCode))
                            seatCodes.Add(seatCode);
                    }
                }
                bookedSeats = seatCodes.Count > 0 ? string.Join(", ", seatCodes) : "N/A";
            }
        }
        catch (JsonException jsonEx)
        {
            // Log JSON parsing error
            <div style="color: red; margin-bottom: 10px;">Lỗi phân tích JSON: @jsonEx.Message</div>
        }
        catch (Exception ex)
        {
            // Log general error
            <div style="color: red; margin-bottom: 10px;">Lỗi: @ex.Message</div>
        }
    }
}

@section Styles{
    <link rel="stylesheet" href="~/css/Shared/fix-header-offset.css" />
}

<div class="success-container with-header-offset">
    <div class="success-message">
        <i class="fas fa-check-circle success-icon"></i>
        <h1>Thanh Toán Thành Công!</h1>
        <p>Cảm ơn bạn đã thanh toán. Vé của bạn đã được xác nhận thành công.</p>
        
        <div class="booking-summary">
            <h3 style="margin-bottom: 20px; color: #4caf50;">Thông Tin Đặt Vé</h3>
            <div class="summary-row">
                <span>Mã đặt vé:</span>
                <span><strong>@bookingCode</strong></span>
            </div>
            <div class="summary-row">
                <span>Phim:</span>
                <span><strong>@movieTitle</strong></span>
            </div>
            <div class="summary-row">
                <span>Phòng chiếu:</span>
                <span><strong>@cinemaRoomName</strong></span>
            </div>
            <div class="summary-row">
                <span>Ngày chiếu:</span>
                <span><strong>@showDate</strong></span>
            </div>
            <div class="summary-row">
                <span>Giờ chiếu:</span>
                <span><strong>@showTime</strong></span>
            </div>
            <div class="summary-row">
                <span>Ghế ngồi:</span>
                <span><strong>@bookedSeats</strong></span>
            </div>
            <div class="summary-row">
                <span>Tổng tiền:</span>
                <span><strong>@totalPriceFormatted</strong></span>
            </div>
        </div>
    </div>

    <div class="action-buttons">
        <a href="@Url.Action("BookingResult", "Booking", new { area = "BookingManagement" })" class="btn btn-primary">
            <i class="fas fa-ticket-alt"></i>
            Xem Vé Chi Tiết
        </a>
        <a href="@Url.Action("Index", "Movies", new { area = "" })" class="btn btn-secondary">
            <i class="fas fa-film"></i>
            Đặt Vé Mới
        </a>
        <a href="@Url.Action("Index", "Home", new { area = "" })" class="btn btn-secondary">
            <i class="fas fa-home"></i>
            Trang Chủ
        </a>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', async function () {
        const promoId = sessionStorage.getItem('promoToRedeem');
        if (!promoId) return;

        try {
            const response = await fetch(`https://localhost:7049/api/v1/promotions/redeem/${promoId}`, {
                method: 'POST',
                headers: {
                    'Authorization': `Bearer ${sessionStorage.getItem('jwtToken') || localStorage.getItem('jwtToken') || localStorage.getItem('authToken') || sessionStorage.getItem('authToken')}`
                }
            });
            if (response.ok) {
                // Redeem thành công, xoá khỏi storage
                sessionStorage.removeItem('promoToRedeem');
                console.log('Promotion redeemed');
            } else {
                console.warn('Redeem promotion failed:', response.status);
            }
        } catch (e) {
            console.error('Redeem promotion error:', e);
        }
    });
</script>
    <script>
        // Fetch booking info
        document.addEventListener('DOMContentLoaded', async () => {
            const params = new URLSearchParams(window.location.search);
            let id = params.get('bookingId') || sessionStorage.getItem('lastBookingId');
            let code = params.get('bookingCode');
            if(!id && !code) return;

            async function fetchTicket(byId){
                const url = byId
                   ? `https://localhost:7049/api/v1/ticket/booking?id=${encodeURIComponent(byId)}`
                   : `https://localhost:7049/api/v1/ticket/booking?code=${encodeURIComponent(code)}`;
                const resp = await fetch(url,{
                    headers:{'Authorization':`Bearer ${sessionStorage.getItem('jwtToken')||localStorage.getItem('jwtToken')||''}`}
                });
                return resp.ok ? resp.json(): null;
            }

            let result=null;
            if(id){ result = await fetchTicket(id); }
            if(!result && code){ result = await fetchTicket(null); }
            if(result && result.data){ renderTicket(result.data); }
            else {
                const summaryEl=document.querySelector('.booking-summary');
                if(summaryEl) summaryEl.innerHTML='<p class="text-danger">Không thể tải thông tin vé!</p>';
            }
        });

        function renderTicket(data){
            const summary = document.querySelector('.booking-summary');
            if(!summary) return;
            summary.innerHTML = `
                <h3 style="margin-bottom:20px;color:#4caf50;">Thông tin vé</h3>
                <div class="summary-row"><span>Mã đặt vé:</span><span><strong>${data.bookingCode}</strong></span></div>
                <div class="summary-row"><span>Phim:</span><span><strong>${data.movieTitle}</strong></span></div>
                <div class="summary-row"><span>Phòng chiếu:</span><span><strong>${data.cinemaRoomName}</strong></span></div>
                <div class="summary-row"><span>Ngày chiếu:</span><span><strong>${data.showDate}</strong></span></div>
                <div class="summary-row"><span>Giờ chiếu:</span><span><strong>${data.showTime}</strong></span></div>
                <div class="summary-row"><span>Ghế ngồi:</span><span><strong>${data.seats?.join(', ')}</strong></span></div>
                <div class="summary-row"><span>Tổng tiền:</span><span><strong>${Number(data.totalPrice).toLocaleString('vi-VN')}₫</strong></span></div>`;
        }
    </script>
    <script src="~/js/movie-details-mostly.js" asp-append-version="true"></script>