@model BookingResultViewModel
@using System.Text.Json
@{
    ViewData["Title"] = "Thanh Toán Thành Công";
    Layout = "_Layout";

    /* --- Parse booking data (giữ lại logic cũ) --- */
    string bookingCode = "N/A", movieTitle = "N/A", cinemaRoomName = "N/A";
    string showDate = "N/A", showTime = "N/A", customerName = "N/A";
    string phoneNumber = "N/A";
    string seatCodesText = "N/A";
    decimal totalPrice = 0;
    string totalPriceFormatted = "0₫";

    if (!string.IsNullOrEmpty(Model?.Data?.ToString()))
    {
        try
        {
            using var jsonDocument = JsonDocument.Parse(Model.Data.ToString());
            var root = jsonDocument.RootElement;

            // nếu API trả về { code, data: { .. } }
            if (root.TryGetProperty("data", out JsonElement dataEl) && dataEl.ValueKind != JsonValueKind.Null)
            {
                if (dataEl.ValueKind == JsonValueKind.Object)
                {
                    root = dataEl; // chuyển sang object data cụ thể
                }
                else if (dataEl.ValueKind == JsonValueKind.Array && dataEl.GetArrayLength() > 0)
                {
                    foreach (var elem in dataEl.EnumerateArray()) { root = elem; break; }
                }
            }

            string GetString(string primary, params string[] alts)
            {
                if (root.TryGetProperty(primary, out JsonElement el) && el.ValueKind == JsonValueKind.String)
                    return el.GetString();
                foreach (var alt in alts)
                    if (root.TryGetProperty(alt, out JsonElement el2) && el2.ValueKind == JsonValueKind.String)
                        return el2.GetString();
                return null;
            }

            bookingCode = GetString("bookingCode", "bookingId", "id") ?? bookingCode;
            movieTitle = GetString("movieTitle", "movieName", "filmTitle") ?? movieTitle;
            cinemaRoomName = GetString("cinemaRoomName", "screen", "cinemaRoom") ?? cinemaRoomName;
            showDate = GetString("showDate", "date") ?? showDate;
            showTime = GetString("showTime", "time") ?? showTime;
            customerName = GetString("fullName", "customerName", "name") ?? customerName;
            phoneNumber = GetString("phoneNumber", "customerPhone", "phone") ?? phoneNumber;

            // Seats
            if (root.TryGetProperty("bookedSeats", out JsonElement seatsElem) && seatsElem.ValueKind == JsonValueKind.Array)
            {
                var list = seatsElem.EnumerateArray().Select(el => el.ValueKind == JsonValueKind.String ? el.GetString() : (el.TryGetProperty("seatCode", out JsonElement seatCodeEl) ? seatCodeEl.GetString() : null))
                    .Where(s => !string.IsNullOrEmpty(s));
                seatCodesText = string.Join(", ", list);
            }
            else if (root.TryGetProperty("seatCode", out JsonElement seatCodeSingle) && seatCodeSingle.ValueKind == JsonValueKind.String)
            {
                seatCodesText = seatCodeSingle.GetString();
            }

            // Price
            if (root.TryGetProperty("totalPrice", out JsonElement priceElem) || root.TryGetProperty("price", out priceElem))
            {
                if (priceElem.ValueKind == JsonValueKind.Number)
                    totalPrice = priceElem.GetDecimal();
                else if (priceElem.ValueKind == JsonValueKind.String && decimal.TryParse(priceElem.GetString(), out var p))
                    totalPrice = p;
                totalPriceFormatted = string.Format("{0:N0}₫", totalPrice);
            }

        }
        catch { /* ignore parse */ }
    }
}

<link rel="stylesheet" href="~/css/HomePage/layout.css" />
    <link rel="stylesheet" href="~/css/HomePage/movie-poster-overlay.css" />
    <link rel="stylesheet" href="~/css/HomePage/responsive.css" />
    <link rel="stylesheet" href="~/css/MovieDetails/movie-details-mostly.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/MovieDetails/movie-details.css" asp-append-version="true" />

@section Styles {
    <style>
        .with-header-offset { padding-top: 110px; }
        @@media (max-width: 992px) {
        .with-header-offset { padding-top: 130px; }
        } 

        @@import url("https://fonts.googleapis.com/css2?family=Oswald:wght@400;700&display=swap");

        :root {
            --color-primary: #9fa8da;
            --color-secondary: #3949ab;
            --color-tertiary: #5c6bc0;
            --color-bg:rgb(26, 26, 26);
            --font-heading: Arial, helvetica;
            --font-body: "open sans", "Roboto", sans-serif;
            --font-misc: "Oswald", "monospace", "courier";
        }

        *,*::before,*::after{box-sizing:border-box;padding:0;margin:0;backface-visibility:hidden;}
        body.payment-page-bg{background-color:var(--color-bg);display:flex;justify-content:center;align-items:center;width:100%;min-height:100vh;padding:40px 20px;}

        /* Override container alignment */
        .payment-page-bg{display:flex;justify-content:center;align-items:flex-start;width:100%;}
        .ticket{margin:auto;} 
        /* Header offset */
        .with-header-offset{margin-top:140px;}
        @@media (max-width:992px){.with-header-offset{margin-top:160px;}}

        /* Ticket */
        .ticket{background-color:var(--color-primary);color:var(--color-secondary);width:600px;display:grid;grid-template-columns:106px calc(100% - 106px);font-family:var(--font-body);}
        .ticket-sub{writing-mode:vertical-rl;text-orientation:mixed;text-align:center;padding:10px;border-right:6px dotted var(--color-bg);position:relative;z-index:1;}
        .ticket-sub::before,.ticket-sub::after{background-color:var(--color-bg);width:22px;height:22px;border-radius:50%;content:"";position:absolute;z-index:2;left:50%;transform:translateX(-50%);} 
        .ticket-sub::before{top:-14px;}
        .ticket-sub::after{bottom:-14px;}
        .ticket-sub h3{font-size:30px;padding:10px 8px;background:var(--color-tertiary);color:#fff;font-family:var(--font-heading);position:relative;}
        .ticket-sub p{font-size:18px;letter-spacing:8px;font-weight:500;padding:14px 4px;font-family:var(--font-heading);}
        .ticket-main{padding:10px;display:grid;grid-template-columns:23% 77%;}
        /* Seat area */
        .ticket-seat{display:grid;grid-template-areas:"suba head" "subb head" "subc head";box-shadow:inset 0 0 0 2px var(--color-secondary);}  
        .ticket-seat>h3{grid-area:head;height:100%;writing-mode:vertical-rl;text-orientation:sideways;padding:12px 10px 12px 2px;background-color:var(--color-tertiary);color:#fff;position:relative;font-family:var(--font-heading);} 
        .ticket-seat>h3 span{position:absolute;bottom:0;right:calc(50% + 1px);width:100%;color:#fff;padding:10px 4px;font-size:1.1em;transform:translateX(50%);} 
        .ticket-seat-box{writing-mode:vertical-rl;text-orientation:sideways;text-align:center;}
        .ticket-seat-box:not(:last-child){border-bottom:2px solid var(--color-secondary);} 
        .ticket-seat-box p{font-weight:bold;text-transform:uppercase;font-size:14px;padding-right:4px;font-family:var(--font-heading);} 
        .ticket-seat-box h4{font-weight:1000;font-size:32px;line-height:32px;padding-top:6px;font-family:var(--font-heading);} 
        /* Info */
        .ticket-info{padding-left:10px;text-align:center;display:grid;grid-template-areas:"brand" "brawler" "referee" "date" "misc";box-shadow:inset 0 0 0 2px var(--color-secondary);} 
        .ticket-info>div:not(:nth-last-child(-n+2)){border-bottom:2px dashed var(--color-secondary);} 
        .ticket-info-brand{grid-area:brand;align-self:center;padding:0 10px 8px;font-size:26px;font-family:var(--font-heading);}
        .ticket-info-brawler{grid-area:brawler;display:flex;width:100%;margin-top:-11px;}
        .separator{writing-mode:vertical-lr;text-orientation:upright;font-weight:1000;width:40px;padding:0 calc(20px - 0.8em);font-family:var(--font-heading);border-left:2px dashed var(--color-secondary);border-right:2px dashed var(--color-secondary);} 
        .brawler{width:calc(50% - 20px);flex:0 0 auto;align-self:center;}
        .brawler span{display:block;font-size:16px;font-family:var(--font-misc);font-weight:bold;letter-spacing:2px;}
        .brawler span:last-child{font-size:32px;text-transform:uppercase;margin-top:-8px;}
        .ticket-info-referee{grid-area:referee;align-self:center;padding:2px 8px 12px;}
        .ticket-info-referee span:first-child{font-size:16px;}
        .ticket-info-referee span:last-child{font-size:20px;font-weight:bold;text-transform:uppercase;padding-left:10px;font-family:var(--font-misc);} 
        .ticket-info-date{grid-area:date;font-size:22px;line-height:12px;padding:24px 10px 2px;font-family:var(--font-heading);font-weight:600;text-transform:uppercase;letter-spacing:3px;background-color:var(--color-tertiary);color:#fff;margin-top:-12px;border-left:2px solid var(--color-secondary);border-right:2px solid var(--color-secondary);} 
        .ticket-info-misc{grid-area:misc;font-size:10px;align-self:center;font-family:var(--font-heading);letter-spacing:6px;} 
    </style>
}

<div class="payment-page-bg with-header-offset">
    <main class="ticket">
        <!-- Left vertical stub -->
        <section class="ticket-sub">
            <h3>Admit One</h3>
            <p>@bookingCode</p>
        </section>

        <!-- Main ticket body -->
        <section class="ticket-main">
            <!-- Seat/Price sub section -->
            <section class="ticket-seat">
                <h3 id="ticket-room">@cinemaRoomName <span id="ticket-price">@totalPriceFormatted</span></h3>
                <div class="ticket-seat-box"><p>Ngày</p><h4 id="ticket-date">@showDate</h4></div>
                <div class="ticket-seat-box"><p>Giờ</p><h4 id="ticket-time">@showTime</h4></div>
                <div class="ticket-seat-box"><p>Ghế</p><h4 id="ticket-seats">@seatCodesText</h4></div>
            </section>
            <!-- Info section -->
            <section class="ticket-info">
                <div class="ticket-info-brand"><h3 id="ticket-title">@movieTitle</h3></div>
                <div class="ticket-info-brawler">
                    <div class="brawler"><span>Khách</span><span id="ticket-customer">@customerName</span></div>
                    <div class="separator">VS</div>
                    <div class="brawler"><span>Số ĐT</span><span id="ticket-phone">@phoneNumber</span></div>
            </div>
                <div class="ticket-info-referee"><span>Mã vé</span><span id="ticket-code">@bookingCode</span></div>
                <div class="ticket-info-date"><p>@showDate @showTime</p></div>
                <div class="ticket-info-misc"><p>Enjoy your movie!</p></div>
            </section>
        </section>
    </main>
</div>

<script>
    document.addEventListener('DOMContentLoaded', async function () {
        const promoId = sessionStorage.getItem('promoToRedeem');
        if (!promoId) return;

        try {
            const response = await fetch(`https://localhost:7049/api/v1/promotions/redeem/${promoId}`, {
                method: 'POST',
                headers: {
                    'Authorization': `Bearer ${sessionStorage.getItem('jwtToken') || localStorage.getItem('jwtToken') || localStorage.getItem('authToken') || sessionStorage.getItem('authToken')}`
                }
            });
            if (response.ok) {
                // Redeem thành công, xoá khỏi storage
                sessionStorage.removeItem('promoToRedeem');
                console.log('Promotion redeemed');
            } else {
                console.warn('Redeem promotion failed:', response.status);
            }
        } catch (e) {
            console.error('Redeem promotion error:', e);
        }
    });
</script>
    <script>
        // Fetch booking info
        document.addEventListener('DOMContentLoaded', async () => {
            const params = new URLSearchParams(window.location.search);
            let id = params.get('bookingId') || sessionStorage.getItem('lastBookingId');
            let code = params.get('bookingCode');
            if(!id && !code) return;

            async function fetchTicket(byId){
                const url = byId
                   ? `https://localhost:7049/api/v1/ticket/booking?bookingId=${encodeURIComponent(byId)}`
                   : `https://localhost:7049/api/v1/booking-ticket/booking/${encodeURIComponent(code)}`;
                const resp = await fetch(url,{
                    headers:{'Authorization':`Bearer ${sessionStorage.getItem('jwtToken')||localStorage.getItem('jwtToken')||''}`}
                });
                return resp.ok ? resp.json(): null;
            }

            let result=null;
            if(id){ result = await fetchTicket(id); }
            if(!result && code){ result = await fetchTicket(null); }
            if(result && result.data){ renderTicket(result.data); }
            else {
                const summaryEl=document.querySelector('.booking-summary');
                if(summaryEl) summaryEl.innerHTML='<p class="text-danger">Không thể tải thông tin vé!</p>';
            }
        });

        function renderTicket(data){
            // "data" có thể là 1 object hoặc 1 mảng tickets
            let bookingInfo = {};

            if(Array.isArray(data)){
                const tickets = data;
                if(tickets.length===0) return;
                const first = tickets[0];
                bookingInfo = {
                    bookingCode: new URLSearchParams(window.location.search).get('bookingCode')||'---',
                    movieTitle: first.movieName||first.movieTitle||'---',
                    cinemaRoomName: first.screen||first.cinemaRoomName||'---',
                    showDate: (first.showDate||'').split('T')[0],
                    showTime: first.showTime||'---',
                    seats: tickets.map(t=>t.seatCode||t.seat||t.seatName||'').filter(Boolean),
                    totalPrice: tickets.reduce((sum,t)=> sum + (Number(t.price)||0),0)
                };
            }else{
                bookingInfo = {
                    bookingCode: data.bookingCode,
                    movieTitle: data.movieTitle,
                    cinemaRoomName: data.cinemaRoomName,
                    showDate: data.showDate,
                    showTime: data.showTime,
                    seats: data.seats||[],
                    totalPrice: data.totalPrice||0
                };
            }

            // Ghi vào UI vé mới
            const set = (id,val)=>{ const el=document.getElementById(id); if(el) el.textContent=val; };
            set('ticket-code',bookingInfo.bookingCode);
            set('ticket-title',bookingInfo.movieTitle);
            set('ticket-room',bookingInfo.cinemaRoomName);
            set('ticket-date',bookingInfo.showDate);
            set('ticket-time',bookingInfo.showTime);
            set('ticket-seats',bookingInfo.seats.join(', '));
            set('ticket-price',Number(bookingInfo.totalPrice).toLocaleString('vi-VN')+'₫');
            set('ticket-customer',bookingInfo.customerName||'');
            set('ticket-phone',bookingInfo.phone||'');
        }
    </script>
    <script src="~/js/movie-details-mostly.js" asp-append-version="true"></script>