@model BookingResultViewModel
@{
    ViewData["Title"] = "Kết Quả Đặt Vé";
    Layout = "_Layout";
}

<style>
    body {
        background: linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%);
        color: white;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        min-height: 100vh;
    }

    .container {
        max-width: 800px;
        margin: 0 auto;
        padding: 2rem;
    }

    .result-card {
        background: rgba(255, 255, 255, 0.05);
        border-radius: 20px;
        padding: 3rem;
        text-align: center;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
    }

    .success-icon {
        font-size: 4rem;
        color: #4fc3f7;
        margin-bottom: 1.5rem;
    }

    .result-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 1rem;
        background: linear-gradient(45deg, #fff, #4fc3f7);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .booking-details {
        background: rgba(255, 255, 255, 0.1);
        border-radius: 15px;
        padding: 2rem;
        margin: 2rem 0;
        text-align: left;
    }

    .detail-row {
        display: flex;
        justify-content: space-between;
        padding: 0.8rem 0;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .detail-row:last-child {
        border-bottom: none;
    }

    .detail-label {
        font-weight: 600;
        color: rgba(255, 255, 255, 0.8);
    }

    .detail-value {
        color: white;
        font-weight: 500;
    }

    .action-buttons {
        display: flex;
        gap: 1rem;
        justify-content: center;
        margin-top: 2rem;
    }

    .btn {
        padding: 1rem 2rem;
        border-radius: 25px;
        border: none;
        font-weight: 600;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
        cursor: pointer;
    }

    .btn-primary {
        background: linear-gradient(45deg, #4fc3f7, #29b6f6);
        color: white;
    }

    .btn-secondary {
        background: rgba(255, 255, 255, 0.1);
        color: white;
        border: 1px solid rgba(255, 255, 255, 0.3);
    }

    .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
    }
</style>

<div class="container">
    <div class="result-card">
        @if (Model.Success)
        {
            <i class="fas fa-check-circle success-icon"></i>
            <h1 class="result-title">Đặt Vé Thành Công!</h1>
            <p>Cảm ơn bạn đã đặt vé. Thông tin chi tiết như sau:</p>
        }
        else
        {
            <i class="fas fa-times-circle success-icon" style="color: #f44336;"></i>
            <h1 class="result-title">Đặt Vé Thất Bại!</h1>
            <p>Có lỗi xảy ra trong quá trình đặt vé. Vui lòng thử lại.</p>
        }

        <div class="booking-details">
            <h3 style="margin-bottom: 1.5rem; color: #4fc3f7;">Thông Tin Đặt Vé</h3>
            
            <!-- Hiển thị trực tiếp dữ liệu từ Model.Data -->
            <div class="detail-row">
                <span class="detail-label">Dữ liệu đặt vé:</span>
                <span class="detail-value">
                    <pre style="background: #f5f5f5; padding: 10px; border-radius: 5px; color: #333; white-space: pre-wrap;">@Model.Data</pre>
                </span>
            </div>
            
            <!-- Hoặc nếu bạn muốn format đẹp hơn, thêm vào sau các trường hiện tại -->
            <div class="detail-row">
                <span class="detail-label">Chi tiết booking:</span>
                <span class="detail-value">
                    @Html.Raw(Model.Data?.ToString()?.Replace(",", ",<br>").Replace("{", "{<br>&nbsp;&nbsp;").Replace("}", "<br>}"))
                </span>
            </div>
        </div>

        <div class="action-buttons">
            @{
                string bookingCodeForLink = "";
                try
                {
                    if (Model.Data != null)
                    {
                        var dataString = Model.Data.ToString();
                        if (!string.IsNullOrEmpty(dataString) && dataString != "{}")
                        {
                            var jsonDoc = System.Text.Json.JsonDocument.Parse(dataString);
                            System.Text.Json.JsonElement bookingCodeElement;
                            if (jsonDoc.RootElement.TryGetProperty("bookingCode", out bookingCodeElement))
                            {
                                bookingCodeForLink = bookingCodeElement.GetString() ?? "";
                            }
                        }
                    }
                }
                catch
                {
                    bookingCodeForLink = "";
                }
            }
            <a href="@Url.Action("TicketInfo", new { bookingCode = bookingCodeForLink })" class="btn btn-primary">
                <i class="fas fa-ticket-alt"></i>
                Xem Vé
            </a>
            <a href="@Url.Action("SelectMovie")" class="btn btn-secondary">
                <i class="fas fa-film"></i>
                Đặt Vé Mới
            </a>
        </div>
    </div>
</div>

<script>
    // Auto redirect to ticket info after 10 seconds if successful
    @if (Model.Success)
    {
        <text>
        setTimeout(function() {
            if (confirm('Bạn có muốn xem thông tin vé không?')) {
                @{
                    string bookingCodeForScript = "";
                    try
                    {
                        if (Model.Data != null)
                        {
                            var dataString = Model.Data.ToString();
                            if (!string.IsNullOrEmpty(dataString) && dataString != "{}")
                            {
                                var jsonDoc = System.Text.Json.JsonDocument.Parse(dataString);
                                System.Text.Json.JsonElement bookingCodeElement;
                                if (jsonDoc.RootElement.TryGetProperty("bookingCode", out bookingCodeElement))
                                {
                                    bookingCodeForScript = bookingCodeElement.GetString() ?? "";
                                }
                            }
                        }
                    }
                    catch
                    {
                        bookingCodeForScript = "";
                    }
                }
                window.location.href = '@Url.Action("TicketInfo", new { bookingCode = bookingCodeForScript })';
            }
        }, 10000);
        </text>
    }
</script>

<div style="display:none"> <!-- Ẩn lại phần debug -->
    <h4>Debug - API Data:</h4>
    <pre>@Model.Data</pre>
</div>

