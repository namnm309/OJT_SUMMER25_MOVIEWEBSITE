@using System.Text.Json
@{
    ViewData["Title"] = "Quản lý người dùng";
    Layout = null;
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Cinema Management</title>
    
    
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <link rel="stylesheet" href="~/css/new-dashboard.css" />
    
    <link rel="stylesheet" href="~/css/book-ticket-fix.css" />
    <link rel="stylesheet" href="~/css/shared-action-buttons.css" />
    
    <style>
        
        .movie-management-content {
            padding: 2rem;
        }
        
        /* Page Header - Sử dụng class giống movie management */
        .movie-page-header {
            margin-bottom: 2rem;
        }
        
        .movie-page-title {
            font-size: 2rem;
            font-weight: 700;
            color: var(--text-dark);
            margin: 0;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }
        
        .movie-page-subtitle {
            color: var(--text-muted);
            margin-top: 0.5rem;
            font-size: 1rem;
        }
        
        
        .loading-spinner {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 3rem;
            text-align: center;
        }
        
        .loading-spinner i {
            color: var(--primary-purple);
            margin-bottom: 1rem;
        }
        
        .loading-spinner p {
            color: var(--text-muted);
        }
        
        
        .empty-state {
            text-align: center;
            padding: 4rem 2rem;
            color: var(--text-muted);
        }

        .empty-state i {
            font-size: 3rem;
            margin-bottom: 1rem;
            opacity: 0.5;
        }
        
        
        .user-controls {
            background: var(--content-bg);
            border: 1px solid var(--content-border);
            border-radius: 16px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: var(--shadow-sm);
        }

        .user-controls-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            gap: 1rem;
            flex-wrap: wrap;
        }

        .user-search-box {
            position: relative;
            flex: 1;
            min-width: 300px;
        }

        .user-search-icon {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--text-muted);
            z-index: 2;
        }
        
        .user-search-input {
            width: 100%;
            padding: 12px 16px 12px 45px;
            border: 1px solid var(--content-border);
            border-radius: 8px;
            background: var(--content-secondary);
            color: var(--text-dark);
            font-size: 14px;
            transition: all 0.3s ease;
        }
        
        .user-search-input:focus {
            border-color: var(--primary-purple);
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            background: var(--content-bg);
            outline: none;
        }

        .user-search-input::placeholder {
            color: var(--text-muted);
        }
        
        .btn-add-user {
            background: linear-gradient(135deg, var(--primary-purple), var(--primary-purple-dark));
            border: none;
            color: white;
            padding: 12px 24px;
            border-radius: 8px;
            font-weight: 600;
            font-size: 14px;
            transition: all 0.3s ease;
            white-space: nowrap;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .btn-add-user:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(102, 126, 234, 0.3);
            color: white;
        }
        
        
        .user-table-container {
            background: var(--content-bg);
            border: 1px solid var(--content-border);
            border-radius: 16px;
            overflow: hidden;
            box-shadow: var(--shadow-sm);
            position: relative;
        }

        .user-table-container.loading {
            opacity: 0.7;
        }
        
        .loading-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(255, 255, 255, 0.8);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 10;
        }
        
        .loading-spinner-small {
            color: var(--primary-purple);
            font-size: 1.5rem;
        }
        
        
        .user-table {
            width: 100%;
            border-collapse: collapse;
            color: var(--text-dark);
        }

        .user-table thead {
            background: var(--content-secondary);
        }
        
        .user-table thead th {
            padding: 16px 12px;
            font-weight: 600;
            font-size: 12px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            color: var(--text-muted);
            border-bottom: 1px solid var(--content-border);
            text-align: left;
        }
        
        .user-table tbody tr {
            border-bottom: 1px solid rgba(226, 232, 240, 0.5);
            transition: background-color 0.2s ease;
        }

        .user-table tbody tr:hover {
            background: var(--content-secondary);
        }
        
        .user-table tbody td {
            padding: 16px 12px;
            vertical-align: middle;
            font-size: 14px;
        }

        
        .user-table-container.loading {
            position: relative;
            transition: opacity 0.2s ease;
            opacity: 0.7;
        }
        
        
        .user-pagination {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1.5rem;
            background: var(--content-bg);
            border: 1px solid var(--content-border);
            border-radius: 16px;
            margin-top: 1.5rem;
        }

        .pagination-info {
            color: var(--text-muted);
            font-size: 14px;
        }

        .pagination-controls {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .btn-pagination {
            padding: 8px 12px;
            border: 1px solid var(--content-border);
            border-radius: 6px;
            background: var(--content-bg);
            color: var(--text-dark);
            cursor: pointer;
            transition: all 0.2s ease;
            font-size: 14px;
        }

        .btn-pagination:hover:not(:disabled) {
            background: var(--primary-purple);
            color: white;
            border-color: var(--primary-purple);
        }

        .btn-pagination:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .page-numbers {
            display: flex;
            gap: 4px;
        }

        .page-number {
            padding: 8px 12px;
            border: 1px solid var(--content-border);
            border-radius: 6px;
            background: var(--content-bg);
            color: var(--text-dark);
            cursor: pointer;
            transition: all 0.2s ease;
            font-size: 14px;
            min-width: 40px;
            text-align: center;
        }

        .page-number:hover {
            background: var(--primary-purple);
            color: white;
            border-color: var(--primary-purple);
        }

        .page-number.active {
            background: var(--primary-purple);
            color: white;
            border-color: var(--primary-purple);
        }

        .pagination-size {
            position: relative;
        }
        
        .pagination-size select {
            padding: 8px 12px;
            border: 1px solid var(--content-border);
            border-radius: 6px;
            background: var(--content-bg);
            color: var(--text-dark);
            font-size: 14px;
        }
        
        .mini-loading {
            margin-left: 8px;
            color: var(--primary-purple);
        }
        
        
        .user-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: linear-gradient(135deg, var(--primary-purple), var(--primary-purple-dark));
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            font-size: 18px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .user-avatar img {
            width: 100%;
            height: 100%;
            border-radius: 50%;
            object-fit: cover;
        }

        
        .user-info {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            max-width: 200px;
        }

        .user-details {
            flex: 1;
            min-width: 0;
        }

        .user-details h6 {
            margin: 0;
            font-weight: 600;
            color: var(--text-dark);
            font-size: 0.95rem;
            display: -webkit-box;
            -webkit-line-clamp: 1;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .user-details small {
            color: var(--text-muted);
            font-size: 0.85rem;
            display: -webkit-box;
            -webkit-line-clamp: 1;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }
        
        
        .status-badge {
            padding: 0.375rem 0.875rem;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .status-active {
            background: #d4edda;
            color: #155724;
        }
        
        .status-inactive {
            background: #f8d7da;
            color: #721c24;
        }
        
        
        .role-admin {
            background: #e74c3c;
            color: white;
        }
        
        .role-staff {
            background: #f39c12;
            color: white;
        }
        
        .role-member {
            background: #27ae60;
            color: white;
        }
        
        
        .modal {
            z-index: 1050 !important;
        }
        
        .modal-backdrop {
            z-index: 1040 !important;
        }
        
        .modal-dialog {
            z-index: 1060 !important;
        }

        .modal-content {
            background-color: var(--content-bg);
            border-radius: 12px;
            border: none;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
            animation: modalSlideIn 0.3s ease-out;
        }

        .modal-header {
            padding: 1.5rem 2rem;
            border-bottom: 1px solid var(--content-border);
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: transparent;
        }

        .modal-header h3, .modal-header h4, .modal-header h5 {
            margin: 0;
            color: var(--text-dark);
            font-weight: 600;
        }

        .modal-header .btn-close {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: var(--text-muted);
            padding: 0;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            transition: all 0.2s ease;
            opacity: 1;
        }

        .modal-header .btn-close:hover {
            background: var(--content-hover);
            color: var(--text-dark);
            opacity: 1;
        }

        .modal-body {
            padding: 2rem;
            color: var(--text-dark);
        }

        .modal-footer {
            padding: 1rem 2rem 2rem;
            border-top: none;
            background: transparent;
        }
        
        
        .modal .btn {
            border-radius: 8px;
            padding: 0.6rem 1.5rem;
            font-weight: 500;
            transition: all 0.2s ease;
            border: none;
            cursor: pointer;
        }
        
        .modal .btn-primary {
            background: var(--primary-purple);
            color: white;
        }
        
        .modal .btn-primary:hover {
            background: var(--primary-purple-dark);
            transform: translateY(-1px);
        }
        
        .modal .btn-secondary {
            background: #6c757d;
            color: white;
        }
        
        .modal .btn-secondary:hover {
            background: #5a6268;
        }
        
        .modal .btn-danger {
            background: #dc3545;
            color: white;
        }
        
        .modal .btn-danger:hover {
            background: #c82333;
        }
        
        
        .modal .form-control {
            border: 1px solid var(--content-border);
            border-radius: 8px;
            padding: 0.75rem;
            background: var(--content-bg);
            color: var(--text-dark);
            transition: border-color 0.2s ease;
        }
        
        .modal .form-control:focus {
            border-color: var(--primary-purple);
            box-shadow: 0 0 0 0.2rem rgba(139, 69, 255, 0.25);
        }
        
        .modal .form-label {
            color: var(--text-dark);
            font-weight: 500;
            margin-bottom: 0.5rem;
        }
        
        
        .modal.show {
            pointer-events: auto;
        }
        
        .modal-dialog {
            pointer-events: auto;
        }
        
        @@keyframes modalSlideIn {
            from {
                opacity: 0;
                transform: translateY(-50px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        
        .action-buttons {
            display: flex;
            gap: 0.5rem;
            justify-content: center;
            align-items: center;
        }
        
        .action-btn {
            width: 32px;
            height: 32px;
            border-radius: 6px;
            border: none;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 0.875rem;
        }
        
        .btn-view {
            background: linear-gradient(135deg, #3b82f6, #2563eb);
            color: white;
        }
        
        .btn-view:hover {
            background: linear-gradient(135deg, #2563eb, #1d4ed8);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(59, 130, 246, 0.4);
            color: white;
        }
        
        .btn-edit {
            background: linear-gradient(135deg, #f59e0b, #d97706);
            color: white;
        }
        
        .btn-edit:hover {
            background: linear-gradient(135deg, #d97706, #b45309);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(245, 158, 11, 0.4);
            color: white;
        }
        
        .btn-toggle {
            background: linear-gradient(135deg, #10b981, #059669);
            color: white;
        }
        
        .btn-toggle:hover {
            background: linear-gradient(135deg, #059669, #047857);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(16, 185, 129, 0.4);
            color: white;
        }
        
        .btn-delete {
            background: linear-gradient(135deg, #ef4444, #dc2626);
            color: white;
        }
        
        .btn-delete:hover {
            background: linear-gradient(135deg, #dc2626, #b91c1c);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(239, 68, 68, 0.4);
            color: white;
        }
        
        
        .user-avatar-large {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2rem;
            font-weight: bold;
            margin: 0 auto;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }
        
        
        .badge.role-admin {
            background: linear-gradient(135deg, #ef4444, #dc2626) !important;
            color: white;
            padding: 0.5rem 1rem;
            font-size: 0.875rem;
        }
        
        .badge.role-staff {
            background: linear-gradient(135deg, #f59e0b, #d97706) !important;
            color: white;
            padding: 0.5rem 1rem;
            font-size: 0.875rem;
        }
        
        .badge.role-member {
            background: linear-gradient(135deg, #10b981, #059669) !important;
            color: white;
            padding: 0.5rem 1rem;
            font-size: 0.875rem;
        }
        
        
        .form-control:focus, .form-select:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }
        
        
        .status-badge {
            padding: 0.375rem 0.75rem;
            border-radius: 9999px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.025em;
            }
        
        .status-active {
            background: linear-gradient(135deg, #10b981, #059669);
            color: white;
        }
        
        .status-inactive {
            background: linear-gradient(135deg, #6b7280, #4b5563);
            color: white;
        }
        
        
        @@media (max-width: 768px) {
            .user-page-title {
                font-size: 1.5rem;
            }
            
            .user-controls-header {
                flex-direction: column;
                align-items: stretch;
            }
            
            .user-search-box {
                min-width: auto;
            }
            
            .action-buttons {
                flex-direction: column;
                gap: 0.25rem;
            }
            
            .user-pagination {
                flex-direction: column;
                gap: 1rem;
            }
        }

        
        .stats-cards {
        }

        
        .user-info-text {
            padding: 0.5rem 0;
        }
        
        .user-info-text .user-name {
            font-weight: 600;
            color: var(--text-dark);
            font-size: 14px;
            margin-bottom: 0.25rem;
        }
        
        .user-info-text .user-email {
            color: var(--text-muted);
            font-size: 13px;
        }
    </style>
</head>

<body>
    
    <div class="new-dashboard-layout">
        
        @await Html.PartialAsync("~/Views/Shared/_DashboardSidebar.cshtml")
        
        
        <main class="new-dashboard-main">
            <div class="movie-management-content">
                
                <div class="movie-page-header">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a href="@Url.Action("Index", "Home", new { area = "" })">
                                    <i class="fas fa-home"></i> Trang chủ
                                </a>
                            </li>
                            <li class="breadcrumb-item">
                                <a href="@Url.Action("AdminDashboard", "Dashboard", new { area = "" })">
                                    Dashboard
                                </a>
                            </li>
                            <li class="breadcrumb-item active">Quản lý người dùng</li>
                        </ol>
                    </nav>
                    <h1 class="movie-page-title">
                        <i class="fas fa-users"></i>
                        Quản lý người dùng
                    </h1>
                    <p class="movie-page-subtitle">Quản lý thông tin và quyền hạn của người dùng trong hệ thống</p>
                </div>
            
                <div class="container-fluid">
                    
                    <div class="user-controls">
                        <div class="user-controls-header">
                            <div class="user-search-box">
                                <i class="fas fa-search user-search-icon"></i>
                                <input type="text" class="user-search-input" placeholder="Tìm kiếm theo tên..." value="@ViewBag.Search" id="userSearchInput">
                                <div id="searchSuggestions" class="search-suggestions" style="display: none;"></div>
                            </div>
                            <select id="sortOrder" class="form-select" style="width: auto; margin: 0 10px;">
                                <option value="asc" selected="@(ViewBag.CurrentSort == "asc")">Tên: A → Z</option>
                                <option value="desc" selected="@(ViewBag.CurrentSort == "desc")">Tên: Z → A</option>
                            </select>
                            <button class="btn-add-user" onclick="openAddUserModal()">
                                <i class="fas fa-plus"></i>
                                Thêm người dùng mới
                            </button>
                        </div>
                    </div>
                
                    
                    <div class="user-table-container">
                        <table class="user-table" id="usersTable">
                            <thead>
                                <tr>
                                    <th>THÔNG TIN NGƯỜI DÙNG</th>
                                    <th>VAI TRÒ</th>
                                    <th>TRẠNG THÁI</th>
                                    <th>NGÀY TẠO</th>
                                    @if(User.IsInRole("Admin"))
                                    {
                                        <th>HÀNH ĐỘNG</th>
                                    }
                                </tr>
                            </thead>
                            <tbody id="usersTableBody">
                            @if (ViewBag.Members != null && ViewBag.Members.Length > 0)
                            {
                                @foreach (var member in ViewBag.Members)
                                {
                                    <tr class="fade-in" data-user-id="@member.GetProperty("userId").ToString()">
                                        <td>
                                            <div class="user-info-text">
                                                    <div class="user-name">@member.GetProperty("fullName").ToString()</div>
                                                <div class="user-email">@member.GetProperty("email").ToString()</div>
                                            </div>
                                        </td>
                                        <td>
                                            @{
                                                var role = member.GetProperty("role").ToString();
                                            }
                                            @if(role == "Admin")
                                            {
                                                <span class="badge role-admin">Quản trị viên</span>
                                            }
                                            else if(role == "Staff")
                                            {
                                                <span class="badge role-staff">Nhân viên</span>
                                            }
                                            else
                                            {
                                                <span class="badge role-member">Thành viên</span>
                                            }
                                        </td>
                                        <td>
                                            @{
                                                JsonElement activeProperty;
                                                var isActive = member.TryGetProperty("isActive", out activeProperty) ? activeProperty.GetBoolean() : true;
                                            }
                                            @if(isActive)
                                            {
                                                <span class="status-badge status-active">Hoạt động</span>
                                            }
                                            else
                                            {
                                                <span class="status-badge status-inactive">Không hoạt động</span>
                                            }
                                        </td>
                                        <td>
                                            @{
                                                var createdAt = member.GetProperty("createdAt").ToString();
                                                if (DateTime.TryParse(createdAt, out DateTime created))
                                                {
                                                    @created.ToString("dd/MM/yyyy")
                                                }
                                                else
                                                {
                                                    @createdAt
                                                }
                                            }
                                        </td>
                                        @if(User.IsInRole("Admin"))
                                        {
                                            <td>
                                                <div class="action-buttons">
                                                    <button type="button" class="action-btn btn-view btn-action" 
                                                            onclick="viewUser('@member.GetProperty("userId").ToString()')" 
                                                            title="Xem chi tiết">
                                                        <i class="fas fa-eye"></i>
                                                    </button>
                                                    <button type="button" class="action-btn btn-edit btn-action" 
                                                            onclick="editUser('@member.GetProperty("userId").ToString()')" 
                                                            title="Chỉnh sửa">
                                                        <i class="fas fa-edit"></i>
                                                    </button>
                                                    <button type="button" class="action-btn btn-toggle btn-action" 
                                                            onclick="toggleUserStatus('@member.GetProperty("userId").ToString()', @(isActive.ToString().ToLower()))" 
                                                            title="Thay đổi trạng thái">
                                                        <i class="fas fa-user-slash"></i>
                                                    </button>
                                                    <button type="button" class="action-btn btn-delete btn-action" 
                                                            onclick="deleteUser('@member.GetProperty("userId").ToString()')" 
                                                            title="Xóa">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        }
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="5" class="text-center text-muted py-5">
                                        <i class="fas fa-users fa-3x mb-3 d-block"></i>
                                        <h5>Không có dữ liệu người dùng</h5>
                                        <p>Hiện tại chưa có người dùng nào trong hệ thống.</p>
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                        
                        
                        <div class="user-pagination">
                            <div class="pagination-info">
                                <span id="paginationInfo">Hiển thị @ViewBag.TotalMembers người dùng</span>
                            </div>
                            <div class="pagination-controls">
                                <button id="prevPageBtn" class="btn-pagination" disabled>❮ Trước</button>
                                <div id="pageNumbers" class="page-numbers"></div>
                                <button id="nextPageBtn" class="btn-pagination" disabled>Sau ❯</button>
                            </div>
                            <div class="pagination-size">
                                <select id="pageSizeSelect" class="form-select">
                                    <option value="10">10 / trang</option>
                                    <option value="25">25 / trang</option>
                                    <option value="50">50 / trang</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
        </main>
    </div>
    
    
    @if(User.IsInRole("Admin"))
    {
        <div class="modal fade" id="addUserModal" tabindex="-1" aria-labelledby="addUserModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addUserModalLabel">
                            <i class="fas fa-user-plus me-2"></i>Thêm người dùng mới
                        </h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="addUserForm">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Tên đăng nhập <span class="text-danger">*</span></label>
                                        <input type="text" class="form-control" id="newUsername" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Họ tên <span class="text-danger">*</span></label>
                                        <input type="text" class="form-control" id="newFullName" required>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Email <span class="text-danger">*</span></label>
                                        <input type="email" class="form-control" id="newEmail" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Số điện thoại</label>
                                        <input type="tel" class="form-control" id="newPhone" required>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Mật khẩu <span class="text-danger">*</span></label>
                                        <input type="password" class="form-control" id="newPassword" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Vai trò <span class="text-danger">*</span></label>
                                        <select class="form-select" id="newRole" required>
                                            <option value="">Chọn vai trò</option>
                                            <option value="Member">Thành viên</option>
                                            <option value="Staff">Nhân viên</option>
                                            <option value="Admin">Quản trị viên</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Số CMND/CCCD <span class="text-danger">*</span></label>
                                        <input type="text" class="form-control" id="newIdentityCard" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Địa chỉ <span class="text-danger">*</span></label>
                                        <input type="text" class="form-control" id="newAddress" required>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                            <i class="fas fa-times me-1"></i>Hủy
                        </button>
                        <button type="button" class="btn btn-add-user" onclick="addUser()">
                            <i class="fas fa-save me-1"></i>Thêm người dùng
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
    
    
    <div class="modal fade" id="viewUserModal" tabindex="-1" aria-labelledby="viewUserModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="viewUserModalLabel">
                        <i class="fas fa-user me-2"></i>Chi tiết người dùng
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-4 text-center">
                            <div class="user-avatar-large" id="viewUserAvatar">
                                
                            </div>
                            <h4 id="viewUserName" class="mt-3"></h4>
                            <span id="viewUserRole" class="badge"></span>
                        </div>
                        <div class="col-md-8">
                            <h6>Thông tin cá nhân</h6>
                            <table class="table table-borderless">
                                <tr>
                                    <td><strong>Tên đăng nhập:</strong></td>
                                    <td id="viewUsername"></td>
                                </tr>
                                <tr>
                                    <td><strong>Email:</strong></td>
                                    <td id="viewEmail"></td>
                                </tr>
                                <tr>
                                    <td><strong>Số điện thoại:</strong></td>
                                    <td id="viewPhone"></td>
                                </tr>
                                <tr>
                                    <td><strong>Địa chỉ:</strong></td>
                                    <td id="viewAddress"></td>
                                </tr>
                                <tr>
                                    <td><strong>Điểm tích lũy:</strong></td>
                                    <td><span id="viewScore" class="badge bg-success"></span></td>
                                </tr>
                                <tr>
                                    <td><strong>Ngày tạo:</strong></td>
                                    <td id="viewCreatedAt"></td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>Đóng
                    </button>
                    <button type="button" class="btn btn-primary" onclick="editUserFromView()">
                        <i class="fas fa-edit me-1"></i>Chỉnh sửa
                    </button>
                </div>
            </div>
        </div>
    </div>

    
    <div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-warning text-dark">
                    <h5 class="modal-title" id="editUserModalLabel">
                        <i class="fas fa-user-edit me-2"></i>Chỉnh sửa người dùng
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editUserForm">
                        <input type="hidden" id="editUserId">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Tên đăng nhập <span class="text-danger">*</span></label>
                                    <input type="text" class="form-control" id="editUsername" required readonly>
                                    <small class="text-muted">Tên đăng nhập không thể thay đổi</small>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Họ tên <span class="text-danger">*</span></label>
                                    <input type="text" class="form-control" id="editFullName" required>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Email <span class="text-danger">*</span></label>
                                    <input type="email" class="form-control" id="editEmail" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Số điện thoại</label>
                                    <input type="tel" class="form-control" id="editPhone">
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Vai trò <span class="text-danger">*</span></label>
                                    <select class="form-select" id="editRole" required>
                                        <option value="">Chọn vai trò</option>
                                        <option value="Member">Thành viên</option>
                                        <option value="Staff">Nhân viên</option>
                                        <option value="Admin">Quản trị viên</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Địa chỉ</label>
                                    <input type="text" class="form-control" id="editAddress">
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Mật khẩu mới</label>
                                    <input type="password" class="form-control" id="editPassword">
                                    <small class="text-muted">Để trống nếu không muốn thay đổi mật khẩu</small>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Điểm tích lũy</label>
                                    <input type="number" class="form-control" id="editScore" step="0.1" min="0">
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>Hủy
                    </button>
                    <button type="button" class="btn btn-warning" onclick="updateUser()">
                        <i class="fas fa-save me-1"></i>Cập nhật
                    </button>
                </div>
            </div>
        </div>
    </div>

    
    <div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteUserModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="deleteUserModalLabel">
                        <i class="fas fa-exclamation-triangle me-2"></i>Xác nhận xóa
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="text-center">
                        <i class="fas fa-user-times fa-3x text-danger mb-3"></i>
                        <h5>Bạn có chắc chắn muốn xóa người dùng này?</h5>
                        <p class="text-muted">Hành động này không thể hoàn tác!</p>
                        <div class="alert alert-warning">
                            <strong>Người dùng:</strong> <span id="deleteUserName"></span><br>
                            <strong>Email:</strong> <span id="deleteUserEmail"></span>
                        </div>
                    </div>
                    <input type="hidden" id="deleteUserId">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>Hủy
                    </button>
                    <button type="button" class="btn btn-danger" onclick="confirmDeleteUser()">
                        <i class="fas fa-trash me-1"></i>Xóa người dùng
                    </button>
                </div>
            </div>
        </div>
    </div>

    
    <div class="modal fade" id="toggleStatusModal" tabindex="-1" aria-labelledby="toggleStatusModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-info text-white">
                    <h5 class="modal-title" id="toggleStatusModalLabel">
                        <i class="fas fa-user-check me-2"></i>Thay đổi trạng thái
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="text-center">
                        <i class="fas fa-exchange-alt fa-3x text-info mb-3"></i>
                        <h5>Thay đổi trạng thái người dùng</h5>
                        <div class="alert alert-info">
                            <strong>Người dùng:</strong> <span id="toggleUserName"></span><br>
                            <strong>Trạng thái hiện tại:</strong> <span id="toggleCurrentStatus"></span><br>
                            <strong>Trạng thái mới:</strong> <span id="toggleNewStatus"></span>
                        </div>
                    </div>
                    <input type="hidden" id="toggleUserId">
                    <input type="hidden" id="toggleNewStatusValue">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>Hủy
                    </button>
                    <button type="button" class="btn btn-info" onclick="confirmToggleStatus()">
                        <i class="fas fa-check me-1"></i>Xác nhận
                    </button>
                </div>
            </div>
        </div>
    </div>
    
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    
    <script src="~/js/user-management.js"></script>
    <script>

        function toggleSidebar() {
            const sidebar = document.querySelector('.new-dashboard-sidebar');
            const main = document.querySelector('.new-dashboard-main');
            
            sidebar.classList.toggle('collapsed');
            main.classList.toggle('expanded');
        }
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('userSearchInput');
            const suggestionsContainer = document.getElementById('searchSuggestions');

            searchInput.addEventListener('input', async function(e) {
                const query = e.target.value.trim();
                console.log('Search query:', query);
                if (query.length === 0) {
                    suggestionsContainer.style.display = 'none';
                    return;
                }

                try {
                    const url = `${apiBaseUrl}/api/User/members?search=${encodeURIComponent(query)}`;
                    console.log('Fetching from:', url);
                    const response = await fetch(url);
                    console.log('Response status:', response.status);
                    const data = await response.json();
                    console.log('Received data:', data);
                    if (data.success && data.data && data.data.length > 0) {
                        suggestionsContainer.innerHTML = '';
                        data.data.forEach(member => {
                            const div = document.createElement('div');
                            div.classList.add('suggestion-item');
                            div.textContent = member.fullName;
                            div.addEventListener('click', () => {
                                searchInput.value = member.fullName;
                                suggestionsContainer.style.display = 'none';
                                window.location.href = `/UserManagement/Members?search=${encodeURIComponent(member.fullName)}&sortOrder=${'@ViewBag.CurrentSort'}`;
                            });
                            suggestionsContainer.appendChild(div);
                        });
                        suggestionsContainer.style.display = 'block';
                        console.log('Suggestions shown:', data.data.length);
                    } else {
                        suggestionsContainer.style.display = 'none';
                        console.log('No suggestions found');
                    }
                } catch (error) {
                    console.error('Error fetching suggestions:', error);
                    suggestionsContainer.style.display = 'none';
                }
            });

            searchInput.addEventListener('keydown', function(e) {
                if (e.key === 'Enter') {
                    e.preventDefault();
                    const query = searchInput.value.trim();
                    if (query.length > 0) {
                        suggestionsContainer.style.display = 'none';
                        window.location.href = `/UserManagement/Members?search=${encodeURIComponent(query)}&sortOrder=${'@ViewBag.CurrentSort'}`;
                    }
                }
            });

            // Hide suggestions when clicking outside
            document.addEventListener('click', function(e) {
                if (!searchInput.contains(e.target) && !suggestionsContainer.contains(e.target)) {
                    suggestionsContainer.style.display = 'none';
                }
            });
        });
    </script>
    <style>
        .search-suggestions {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: white;
            border: 1px solid var(--content-border);
            border-radius: 8px;
            max-height: 200px;
            overflow-y: auto;
            z-index: 1000;
            box-shadow: var(--shadow-sm);
        }
        .suggestion-item {
            padding: 10px 15px;
            cursor: pointer;
        }
        .suggestion-item:hover {
            background: var(--content-secondary);
        }
    </style>
    <script>
        document.getElementById('sortOrder').addEventListener('change', function() {
            window.location.href = '?sortOrder=' + this.value;
        });
    </script>
</body>
</html>
