[
  {
    "ContainingType": "ControllerLayer.Controllers.UserController",
    "Method": "Login",
    "RelativePath": "api/User/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginRequest",
        "Type": "ApplicationLayer.DTO.UserManagement.LoginRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControllerLayer.Controllers.UserController",
    "Method": "Logout",
    "RelativePath": "api/User/logout",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControllerLayer.Controllers.UserController",
    "Method": "GetAllMembers",
    "RelativePath": "api/User/members",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControllerLayer.Controllers.UserController",
    "Method": "GetProfile",
    "RelativePath": "api/User/profile",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControllerLayer.Controllers.UserController",
    "Method": "EditProfile",
    "RelativePath": "api/User/profile",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "editRequest",
        "Type": "ApplicationLayer.DTO.UserManagement.EditProfileRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControllerLayer.Controllers.UserController",
    "Method": "Register",
    "RelativePath": "api/User/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "registerRequest",
        "Type": "ApplicationLayer.DTO.UserManagement.RegisterRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControllerLayer.Controllers.MovieController",
    "Method": "ChangeStatus",
    "RelativePath": "api/v1/movie/ChangeStatus",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Id",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "Status",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControllerLayer.Controllers.MovieController",
    "Method": "CreateMovie",
    "RelativePath": "api/v1/movie/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Dto",
        "Type": "ApplicationLayer.DTO.MovieManagement.MovieCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControllerLayer.Controllers.MovieController",
    "Method": "DeleteMovie",
    "RelativePath": "api/v1/movie/Delete",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Id",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControllerLayer.Controllers.MovieController",
    "Method": "UpdateMovie",
    "RelativePath": "api/v1/movie/Update",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Dto",
        "Type": "ApplicationLayer.DTO.MovieManagement.MovieUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControllerLayer.Controllers.MovieController",
    "Method": "ViewListMovie",
    "RelativePath": "api/v1/movie/View",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControllerLayer.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControllerLayer.WeatherForecast, ControllerLayer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]