@model SelectMovieViewModel
@{
    ViewData["Title"] = "Chọn Phim và Suất Chiếu";
    Layout = "_Layout";
}

<div class="booking-container">
    <div class="booking-header text-center mb-5">
        <h1 class="booking-title">Đặt Vé Xem Phim</h1>
        <p class="booking-subtitle">Chọn phim và suất chiếu yêu thích</p>
        
        <!-- Booking Progress -->
        <div class="booking-progress mt-4">
            <div class="progress-step active">
                <div class="step-circle">1</div>
                <span>Chọn phim</span>
            </div>
            <div class="progress-line"></div>
            <div class="progress-step">
                <div class="step-circle">2</div>
                <span>Chọn ghế</span>
            </div>
            <div class="progress-line"></div>
            <div class="progress-step">
                <div class="step-circle">3</div>
                <span>Xác nhận</span>
            </div>
        </div>
    </div>

    <form id="selectMovieForm" class="booking-form">
        <div class="row">
            <!-- Movie Selection -->
            <div class="col-lg-4 mb-4">
                <div class="booking-card">
                    <h3 class="card-title">
                        <i class="fas fa-film"></i>
                        Chọn Phim
                    </h3>
                    <select id="movieSelect" class="form-select" required>
                        <option value="">-- Chọn phim --</option>
                        @foreach (var movie in Model.Movies)
                        {
                            <option value="@movie.Id" 
                                    data-title="@movie.Title"
                                    data-poster="@movie.Poster"
                                    data-duration="@movie.Duration"
                                    data-genre="@movie.Genre"
                                    data-price="@movie.Price">
                                @movie.Title (@movie.Duration phút)
                            </option>
                        }
                    </select>
                </div>
            </div>

            <!-- Date Selection -->
            <div class="col-lg-4 mb-4">
                <div class="booking-card">
                    <h3 class="card-title">
                        <i class="fas fa-calendar"></i>
                        Chọn Ngày
                    </h3>
                    <select id="dateSelect" class="form-select" disabled required>
                        <option value="">-- Chọn ngày chiếu --</option>
                    </select>
                </div>
            </div>

            <!-- Showtime Selection -->
            <div class="col-lg-4 mb-4">
                <div class="booking-card">
                    <h3 class="card-title">
                        <i class="fas fa-clock"></i>
                        Chọn Suất Chiếu
                    </h3>
                    <select id="showtimeSelect" class="form-select" disabled required>
                        <option value="">-- Chọn giờ chiếu --</option>
                    </select>
                </div>
            </div>
        </div>

        <!-- Movie Preview -->
        <div id="moviePreview" class="movie-preview" style="display: none;">
            <div class="row align-items-center">
                <div class="col-md-3">
                    <img id="previewPoster" src="" alt="Movie Poster" class="movie-poster">
                </div>
                <div class="col-md-9">
                    <h3 id="previewTitle" class="movie-title"></h3>
                    <div class="movie-details">
                        <p><strong>Thể loại:</strong> <span id="previewGenre"></span></p>
                        <p><strong>Thời lượng:</strong> <span id="previewDuration"></span> phút</p>
                        <p><strong>Giá vé:</strong> <span id="previewPrice"></span> VNĐ</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="booking-actions text-center mt-4">
            <button type="button" id="bookTicketBtn" class="btn btn-primary btn-lg" disabled>
                <i class="fas fa-arrow-right"></i>
                Tiếp tục chọn ghế
            </button>
        </div>
    </form>
</div>

<style>
    .booking-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
        background: linear-gradient(135deg, #1a1a1a 0%, #0f0f0f 100%);
        min-height: 100vh;
        color: white;
    }

    .booking-header {
        margin-bottom: 3rem;
    }

    .booking-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: #df2144;
        margin-bottom: 0.5rem;
    }

    .booking-subtitle {
        font-size: 1.2rem;
        color: rgba(255,255,255,0.8);
    }

    /* Progress Steps */
    .booking-progress {
        display: flex;
        justify-content: center;
        align-items: center;
        max-width: 500px;
        margin: 0 auto;
    }

    .progress-step {
        display: flex;
        flex-direction: column;
        align-items: center;
        color: rgba(255,255,255,0.5);
        transition: all 0.3s ease;
    }

    .progress-step.active {
        color: #df2144;
    }

    .step-circle {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: rgba(255,255,255,0.2);
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 0.5rem;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .progress-step.active .step-circle {
        background: #df2144;
        color: white;
    }

    .progress-line {
        width: 100px;
        height: 2px;
        background: rgba(255,255,255,0.2);
        margin: 0 1rem;
    }

    /* Cards */
    .booking-card {
        background: rgba(42, 42, 42, 0.9);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 15px;
        padding: 2rem;
        height: 100%;
        backdrop-filter: blur(10px);
        transition: all 0.3s ease;
    }

    .booking-card:hover {
        border-color: rgba(223, 33, 68, 0.5);
        box-shadow: 0 10px 30px rgba(223, 33, 68, 0.2);
    }

    .card-title {
        font-size: 1.3rem;
        font-weight: 600;
        margin-bottom: 1.5rem;
        color: #df2144;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .form-select {
        background: rgba(255,255,255,0.1);
        border: 1px solid rgba(255,255,255,0.2);
        border-radius: 10px;
        color: white;
        padding: 0.75rem 1rem;
        font-size: 1rem;
    }

    .form-select:focus {
        background: rgba(255,255,255,0.15);
        border-color: #df2144;
        box-shadow: 0 0 0 0.2rem rgba(223, 33, 68, 0.25);
        color: white;
    }

    .form-select option {
        background: #2a2a2a;
        color: white;
    }

    .form-select:disabled {
        background: rgba(255,255,255,0.05);
        color: rgba(255,255,255,0.5);
    }

    /* Movie Preview */
    .movie-preview {
        background: rgba(42, 42, 42, 0.9);
        border: 1px solid rgba(223, 33, 68, 0.3);
        border-radius: 15px;
        padding: 2rem;
        margin: 2rem 0;
        backdrop-filter: blur(10px);
    }

    .movie-poster {
        width: 100%;
        max-width: 200px;
        border-radius: 10px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.5);
    }

    .movie-title {
        color: #df2144;
        font-size: 1.8rem;
        font-weight: 700;
        margin-bottom: 1rem;
    }

    .movie-details p {
        margin-bottom: 0.5rem;
        font-size: 1.1rem;
    }

    /* Action Buttons */
    .booking-actions {
        margin-top: 3rem;
    }

    .btn-primary {
        background: linear-gradient(135deg, #df2144 0%, #ff4466 100%);
        border: none;
        border-radius: 50px;
        padding: 1rem 3rem;
        font-size: 1.1rem;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .btn-primary:hover:not(:disabled) {
        transform: translateY(-2px);
        box-shadow: 0 10px 30px rgba(223, 33, 68, 0.4);
    }

    .btn-primary:disabled {
        background: rgba(255,255,255,0.2);
        color: rgba(255,255,255,0.5);
        cursor: not-allowed;
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .booking-container {
            padding: 1rem;
        }

        .booking-title {
            font-size: 2rem;
        }

        .progress-line {
            width: 50px;
        }

        .booking-card {
            padding: 1.5rem;
        }
    }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const movieSelect = document.getElementById('movieSelect');
    const dateSelect = document.getElementById('dateSelect');
    const showtimeSelect = document.getElementById('showtimeSelect');
    const bookTicketBtn = document.getElementById('bookTicketBtn');
    const moviePreview = document.getElementById('moviePreview');

    // Movie selection handler
    movieSelect.addEventListener('change', function() {
        const selectedOption = this.options[this.selectedIndex];
        
        if (this.value) {
            // Show movie preview
            showMoviePreview(selectedOption);
            
            // Load dates
            loadShowDates(this.value);
        } else {
            hideMoviePreview();
            resetSelections();
        }
    });

    // Date selection handler
    dateSelect.addEventListener('change', function() {
        if (this.value) {
            loadShowTimes(movieSelect.value, this.value);
        } else {
            resetShowtimes();
        }
    });

    // Showtime selection handler
    showtimeSelect.addEventListener('change', function() {
        checkFormComplete();
    });

    // Book ticket button
    bookTicketBtn.addEventListener('click', function() {
        if (movieSelect.value && dateSelect.value && showtimeSelect.value) {
            const showtimeId = showtimeSelect.value;
            window.location.href = `/BookingManagement/Booking/SelectSeat?showTimeId=${showtimeId}`;
        }
    });

    function showMoviePreview(selectedOption) {
        document.getElementById('previewPoster').src = selectedOption.dataset.poster;
        document.getElementById('previewTitle').textContent = selectedOption.dataset.title;
        document.getElementById('previewGenre').textContent = selectedOption.dataset.genre;
        document.getElementById('previewDuration').textContent = selectedOption.dataset.duration;
        document.getElementById('previewPrice').textContent = new Intl.NumberFormat('vi-VN').format(selectedOption.dataset.price);
        
        moviePreview.style.display = 'block';
    }

    function hideMoviePreview() {
        moviePreview.style.display = 'none';
    }

    function loadShowDates(movieId) {
        fetch('/BookingManagement/Booking/GetShowDates', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
            },
            body: JSON.stringify(movieId)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                populateSelectOptions(dateSelect, data.data, 'Chọn ngày chiếu', (date) => {
                    const d = new Date(date);
                    return d.toLocaleDateString('vi-VN', { 
                        weekday: 'long', 
                        year: 'numeric', 
                        month: 'long', 
                        day: 'numeric' 
                    });
                });
                dateSelect.disabled = false;
            }
        })
        .catch(error => {
            console.error('Error loading show dates:', error);
        });
    }

    function loadShowTimes(movieId, showDate) {
        fetch('/BookingManagement/Booking/GetShowTimes', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
            },
            body: JSON.stringify({ movieId: movieId, showDate: showDate })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                populateSelectOptions(showtimeSelect, data.data, 'Chọn giờ chiếu', (showtime) => {
                    const startTime = new Date(showtime.startTime).toLocaleTimeString('vi-VN', { 
                        hour: '2-digit', 
                        minute: '2-digit' 
                    });
                    return `${startTime} - ${showtime.cinemaRoomName} (${showtime.availableSeats}/${showtime.totalSeats} ghế trống)`;
                }, 'id');
                showtimeSelect.disabled = false;
            }
        })
        .catch(error => {
            console.error('Error loading show times:', error);
        });
    }

    function populateSelectOptions(selectElement, data, placeholder, textFormatter, valueProperty = null) {
        selectElement.innerHTML = `<option value="">${placeholder}</option>`;
        
        data.forEach(item => {
            const option = document.createElement('option');
            option.value = valueProperty ? item[valueProperty] : item;
            option.textContent = textFormatter ? textFormatter(item) : item;
            selectElement.appendChild(option);
        });
    }

    function resetSelections() {
        dateSelect.innerHTML = '<option value="">-- Chọn ngày chiếu --</option>';
        dateSelect.disabled = true;
        resetShowtimes();
    }

    function resetShowtimes() {
        showtimeSelect.innerHTML = '<option value="">-- Chọn giờ chiếu --</option>';
        showtimeSelect.disabled = true;
        checkFormComplete();
    }

    function checkFormComplete() {
        const isComplete = movieSelect.value && dateSelect.value && showtimeSelect.value;
        bookTicketBtn.disabled = !isComplete;
    }
});
</script> 